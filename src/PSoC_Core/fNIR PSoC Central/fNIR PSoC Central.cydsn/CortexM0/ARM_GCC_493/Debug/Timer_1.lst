ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"Timer_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	Timer_1_initVar
  18              		.bss
  19              		.type	Timer_1_initVar, %object
  20              		.size	Timer_1_initVar, 1
  21              	Timer_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.Timer_1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	Timer_1_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	Timer_1_Init, %function
  29              	Timer_1_Init:
  30              	.LFB2:
  31              		.file 1 "Generated_Source\\PSoC4\\Timer_1.c"
   1:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/Timer_1.c **** * File Name: Timer_1.c
   3:Generated_Source\PSoC4/Timer_1.c **** * Version 2.70
   4:Generated_Source\PSoC4/Timer_1.c **** *
   5:Generated_Source\PSoC4/Timer_1.c **** * Description:
   6:Generated_Source\PSoC4/Timer_1.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC4/Timer_1.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC4/Timer_1.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC4/Timer_1.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC4/Timer_1.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC4/Timer_1.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC4/Timer_1.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC4/Timer_1.c **** *  or a capture event.
  14:Generated_Source\PSoC4/Timer_1.c **** *
  15:Generated_Source\PSoC4/Timer_1.c **** * Note:
  16:Generated_Source\PSoC4/Timer_1.c **** *
  17:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
  18:Generated_Source\PSoC4/Timer_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/Timer_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/Timer_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/Timer_1.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/Timer_1.c **** 
  24:Generated_Source\PSoC4/Timer_1.c **** #include "Timer_1.h"
  25:Generated_Source\PSoC4/Timer_1.c **** 
  26:Generated_Source\PSoC4/Timer_1.c **** uint8 Timer_1_initVar = 0u;
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 2


  27:Generated_Source\PSoC4/Timer_1.c **** 
  28:Generated_Source\PSoC4/Timer_1.c **** 
  29:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
  30:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_Init
  31:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
  32:Generated_Source\PSoC4/Timer_1.c **** *
  33:Generated_Source\PSoC4/Timer_1.c **** * Summary:
  34:Generated_Source\PSoC4/Timer_1.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC4/Timer_1.c **** *
  36:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
  37:Generated_Source\PSoC4/Timer_1.c **** *  void
  38:Generated_Source\PSoC4/Timer_1.c **** *
  39:Generated_Source\PSoC4/Timer_1.c **** * Return:
  40:Generated_Source\PSoC4/Timer_1.c **** *  void
  41:Generated_Source\PSoC4/Timer_1.c **** *
  42:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
  43:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_Init(void) 
  44:Generated_Source\PSoC4/Timer_1.c **** {
  32              		.loc 1 44 0
  33              		.cfi_startproc
  34 0000 90B5     		push	{r4, r7, lr}
  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 83B0     		sub	sp, sp, #12
  40              		.cfi_def_cfa_offset 24
  41 0004 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  45:Generated_Source\PSoC4/Timer_1.c ****     #if(!Timer_1_UsingFixedFunction)
  46:Generated_Source\PSoC4/Timer_1.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC4/Timer_1.c ****             uint8 Timer_1_interruptState;
  48:Generated_Source\PSoC4/Timer_1.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC4/Timer_1.c **** 
  50:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
  51:Generated_Source\PSoC4/Timer_1.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL &= Timer_1_CTRL_ENABLE;
  53:Generated_Source\PSoC4/Timer_1.c **** 
  54:Generated_Source\PSoC4/Timer_1.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC4/Timer_1.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_CONTROL2 &= ((uint8)(~Timer_1_CTRL_MODE_MASK));
  57:Generated_Source\PSoC4/Timer_1.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC4/Timer_1.c **** 
  59:Generated_Source\PSoC4/Timer_1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_MODE_MASK));
  61:Generated_Source\PSoC4/Timer_1.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC4/Timer_1.c **** 
  63:Generated_Source\PSoC4/Timer_1.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC4/Timer_1.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_CONTROL |= 0x04u;
  67:Generated_Source\PSoC4/Timer_1.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC4/Timer_1.c **** 
  69:Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1_RunModeUsed == 2)
  70:Generated_Source\PSoC4/Timer_1.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC4/Timer_1.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC4/Timer_1.c ****                 interrupt) is enabled*/
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 3


  73:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC4/Timer_1.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC4/Timer_1.c **** 
  76:Generated_Source\PSoC4/Timer_1.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC4/Timer_1.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC4/Timer_1.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC4/Timer_1.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC4/Timer_1.c **** 
  82:Generated_Source\PSoC4/Timer_1.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC4/Timer_1.c **** 
  84:Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1_UsingHWEnable != 0)
  85:Generated_Source\PSoC4/Timer_1.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC4/Timer_1.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_CONTROL2 |= Timer_1_CTRL_MODE_PULSEWIDTH;
  88:Generated_Source\PSoC4/Timer_1.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC4/Timer_1.c **** 
  90:Generated_Source\PSoC4/Timer_1.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC4/Timer_1.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_RCOD;
  94:Generated_Source\PSoC4/Timer_1.c **** 
  95:Generated_Source\PSoC4/Timer_1.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_ENBL;
  98:Generated_Source\PSoC4/Timer_1.c **** 
  99:Generated_Source\PSoC4/Timer_1.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC4/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC4/Timer_1.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC4/Timer_1.c **** 
 103:Generated_Source\PSoC4/Timer_1.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC4/Timer_1.c **** 
 105:Generated_Source\PSoC4/Timer_1.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_RT1 &= ((uint8)(~Timer_1_RT1_MASK));
 107:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_RT1 |= Timer_1_SYNC;
 108:Generated_Source\PSoC4/Timer_1.c **** 
 109:Generated_Source\PSoC4/Timer_1.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_RT1 &= ((uint8)(~Timer_1_SYNCDSI_MASK));
 111:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_RT1 |= Timer_1_SYNCDSI_EN;
 112:Generated_Source\PSoC4/Timer_1.c **** 
 113:Generated_Source\PSoC4/Timer_1.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL2 |= Timer_1_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC4/Timer_1.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC4/Timer_1.c **** 
 117:Generated_Source\PSoC4/Timer_1.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_WritePeriod(Timer_1_INIT_PERIOD);
  43              		.loc 1 118 0
  44 0006 124B     		ldr	r3, .L2
  45 0008 181C     		mov	r0, r3
  46 000a FFF7FEFF 		bl	Timer_1_WritePeriod
 119:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_WriteCounter(Timer_1_INIT_PERIOD);
  47              		.loc 1 119 0
  48 000e 104B     		ldr	r3, .L2
  49 0010 181C     		mov	r0, r3
  50 0012 FFF7FEFF 		bl	Timer_1_WriteCounter
 120:Generated_Source\PSoC4/Timer_1.c **** 
 121:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_UsingHWCaptureCounter)/* Capture counter is enabled */
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 4


 122:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CAPTURE_COUNT_CTRL |= Timer_1_CNTR_ENABLE;
 123:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_SetCaptureCount(Timer_1_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC4/Timer_1.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC4/Timer_1.c **** 
 126:Generated_Source\PSoC4/Timer_1.c ****     #if (!Timer_1_UsingFixedFunction)
 127:Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1_SoftwareCaptureMode)
 128:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_SetCaptureMode(Timer_1_INIT_CAPTURE_MODE);
  51              		.loc 1 128 0
  52 0016 8020     		mov	r0, #128
  53 0018 FFF7FEFF 		bl	Timer_1_SetCaptureMode
 129:Generated_Source\PSoC4/Timer_1.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC4/Timer_1.c **** 
 131:Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1_SoftwareTriggerMode)
 132:Generated_Source\PSoC4/Timer_1.c ****             #if (!Timer_1_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC4/Timer_1.c ****                 if (0u == (Timer_1_CONTROL & Timer_1__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC4/Timer_1.c ****                 {
 135:Generated_Source\PSoC4/Timer_1.c ****                     Timer_1_SetTriggerMode(Timer_1_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC4/Timer_1.c ****                 }
 137:Generated_Source\PSoC4/Timer_1.c ****             #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC4/Timer_1.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC4/Timer_1.c **** 
 140:Generated_Source\PSoC4/Timer_1.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC4/Timer_1.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_interruptState = CyEnterCriticalSection();
  54              		.loc 1 142 0
  55 001c FC1D     		add	r4, r7, #7
  56 001e FFF7FEFF 		bl	CyEnterCriticalSection
  57 0022 031C     		mov	r3, r0
  58 0024 2370     		strb	r3, [r4]
 143:Generated_Source\PSoC4/Timer_1.c **** 
 144:Generated_Source\PSoC4/Timer_1.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_STATUS_AUX_CTRL |= Timer_1_STATUS_ACTL_INT_EN_MASK;
  59              		.loc 1 145 0
  60 0026 0B4A     		ldr	r2, .L2+4
  61 0028 0A4B     		ldr	r3, .L2+4
  62 002a 1B78     		ldrb	r3, [r3]
  63 002c DBB2     		uxtb	r3, r3
  64 002e 1021     		mov	r1, #16
  65 0030 0B43     		orr	r3, r1
  66 0032 DBB2     		uxtb	r3, r3
  67 0034 1370     		strb	r3, [r2]
 146:Generated_Source\PSoC4/Timer_1.c **** 
 147:Generated_Source\PSoC4/Timer_1.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC4/Timer_1.c ****         CyExitCriticalSection(Timer_1_interruptState);
  68              		.loc 1 148 0
  69 0036 FB1D     		add	r3, r7, #7
  70 0038 1B78     		ldrb	r3, [r3]
  71 003a 181C     		mov	r0, r3
  72 003c FFF7FEFF 		bl	CyExitCriticalSection
 149:Generated_Source\PSoC4/Timer_1.c **** 
 150:Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1_EnableTriggerMode)
 151:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_EnableTrigger();
 152:Generated_Source\PSoC4/Timer_1.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC4/Timer_1.c **** 		
 154:Generated_Source\PSoC4/Timer_1.c **** 		
 155:Generated_Source\PSoC4/Timer_1.c ****         #if (Timer_1_InterruptOnCaptureCount && !Timer_1_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC4/Timer_1.c ****             Timer_1_SetInterruptCount(Timer_1_INIT_INT_CAPTURE_COUNT);
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 5


 157:Generated_Source\PSoC4/Timer_1.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC4/Timer_1.c **** 
 159:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_ClearFIFO();
  73              		.loc 1 159 0
  74 0040 FFF7FEFF 		bl	Timer_1_ClearFIFO
 160:Generated_Source\PSoC4/Timer_1.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC4/Timer_1.c **** 
 162:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_SetInterruptMode(Timer_1_INIT_INTERRUPT_MODE);
  75              		.loc 1 162 0
  76 0044 0020     		mov	r0, #0
  77 0046 FFF7FEFF 		bl	Timer_1_SetInterruptMode
 163:Generated_Source\PSoC4/Timer_1.c **** }
  78              		.loc 1 163 0
  79 004a BD46     		mov	sp, r7
  80 004c 03B0     		add	sp, sp, #12
  81              		@ sp needed
  82 004e 90BD     		pop	{r4, r7, pc}
  83              	.L3:
  84              		.align	2
  85              	.L2:
  86 0050 7FBB0000 		.word	47999
  87 0054 93000F40 		.word	1074725011
  88              		.cfi_endproc
  89              	.LFE2:
  90              		.size	Timer_1_Init, .-Timer_1_Init
  91              		.section	.text.Timer_1_Enable,"ax",%progbits
  92              		.align	2
  93              		.global	Timer_1_Enable
  94              		.code	16
  95              		.thumb_func
  96              		.type	Timer_1_Enable, %function
  97              	Timer_1_Enable:
  98              	.LFB3:
 164:Generated_Source\PSoC4/Timer_1.c **** 
 165:Generated_Source\PSoC4/Timer_1.c **** 
 166:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 167:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_Enable
 168:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 169:Generated_Source\PSoC4/Timer_1.c **** *
 170:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 171:Generated_Source\PSoC4/Timer_1.c **** *  Enable the Timer
 172:Generated_Source\PSoC4/Timer_1.c **** *
 173:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 174:Generated_Source\PSoC4/Timer_1.c **** *  void
 175:Generated_Source\PSoC4/Timer_1.c **** *
 176:Generated_Source\PSoC4/Timer_1.c **** * Return:
 177:Generated_Source\PSoC4/Timer_1.c **** *  void
 178:Generated_Source\PSoC4/Timer_1.c **** *
 179:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 180:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_Enable(void) 
 181:Generated_Source\PSoC4/Timer_1.c **** {
  99              		.loc 1 181 0
 100              		.cfi_startproc
 101 0000 80B5     		push	{r7, lr}
 102              		.cfi_def_cfa_offset 8
 103              		.cfi_offset 7, -8
 104              		.cfi_offset 14, -4
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 6


 105 0002 00AF     		add	r7, sp, #0
 106              		.cfi_def_cfa_register 7
 182:Generated_Source\PSoC4/Timer_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
 184:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_GLOBAL_ENABLE |= Timer_1_BLOCK_EN_MASK;
 185:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_GLOBAL_STBY_ENABLE |= Timer_1_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC4/Timer_1.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC4/Timer_1.c **** 
 188:Generated_Source\PSoC4/Timer_1.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC4/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED || Timer_1_UsingFixedFunction)
 190:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL |= Timer_1_CTRL_ENABLE;
 107              		.loc 1 190 0
 108 0004 0549     		ldr	r1, .L5
 109 0006 054B     		ldr	r3, .L5
 110 0008 1B78     		ldrb	r3, [r3]
 111 000a DBB2     		uxtb	r3, r3
 112 000c 8022     		mov	r2, #128
 113 000e 5242     		neg	r2, r2
 114 0010 1343     		orr	r3, r2
 115 0012 DBB2     		uxtb	r3, r3
 116 0014 0B70     		strb	r3, [r1]
 191:Generated_Source\PSoC4/Timer_1.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC4/Timer_1.c **** }
 117              		.loc 1 192 0
 118 0016 BD46     		mov	sp, r7
 119              		@ sp needed
 120 0018 80BD     		pop	{r7, pc}
 121              	.L6:
 122 001a C046     		.align	2
 123              	.L5:
 124 001c 70000F40 		.word	1074724976
 125              		.cfi_endproc
 126              	.LFE3:
 127              		.size	Timer_1_Enable, .-Timer_1_Enable
 128              		.section	.text.Timer_1_Start,"ax",%progbits
 129              		.align	2
 130              		.global	Timer_1_Start
 131              		.code	16
 132              		.thumb_func
 133              		.type	Timer_1_Start, %function
 134              	Timer_1_Start:
 135              	.LFB4:
 193:Generated_Source\PSoC4/Timer_1.c **** 
 194:Generated_Source\PSoC4/Timer_1.c **** 
 195:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 196:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_Start
 197:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 198:Generated_Source\PSoC4/Timer_1.c **** *
 199:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 200:Generated_Source\PSoC4/Timer_1.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC4/Timer_1.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC4/Timer_1.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC4/Timer_1.c **** *
 204:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 205:Generated_Source\PSoC4/Timer_1.c **** *  void
 206:Generated_Source\PSoC4/Timer_1.c **** *
 207:Generated_Source\PSoC4/Timer_1.c **** * Return:
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 7


 208:Generated_Source\PSoC4/Timer_1.c **** *  void
 209:Generated_Source\PSoC4/Timer_1.c **** *
 210:Generated_Source\PSoC4/Timer_1.c **** * Global variables:
 211:Generated_Source\PSoC4/Timer_1.c **** *  Timer_1_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC4/Timer_1.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC4/Timer_1.c **** *
 214:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 215:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_Start(void) 
 216:Generated_Source\PSoC4/Timer_1.c **** {
 136              		.loc 1 216 0
 137              		.cfi_startproc
 138 0000 80B5     		push	{r7, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 7, -8
 141              		.cfi_offset 14, -4
 142 0002 00AF     		add	r7, sp, #0
 143              		.cfi_def_cfa_register 7
 217:Generated_Source\PSoC4/Timer_1.c ****     if(Timer_1_initVar == 0u)
 144              		.loc 1 217 0
 145 0004 064B     		ldr	r3, .L9
 146 0006 1B78     		ldrb	r3, [r3]
 147 0008 002B     		cmp	r3, #0
 148 000a 04D1     		bne	.L8
 218:Generated_Source\PSoC4/Timer_1.c ****     {
 219:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_Init();
 149              		.loc 1 219 0
 150 000c FFF7FEFF 		bl	Timer_1_Init
 220:Generated_Source\PSoC4/Timer_1.c **** 
 221:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_initVar = 1u;   /* Clear this bit for Initialization */
 151              		.loc 1 221 0
 152 0010 034B     		ldr	r3, .L9
 153 0012 0122     		mov	r2, #1
 154 0014 1A70     		strb	r2, [r3]
 155              	.L8:
 222:Generated_Source\PSoC4/Timer_1.c ****     }
 223:Generated_Source\PSoC4/Timer_1.c **** 
 224:Generated_Source\PSoC4/Timer_1.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_Enable();
 156              		.loc 1 225 0
 157 0016 FFF7FEFF 		bl	Timer_1_Enable
 226:Generated_Source\PSoC4/Timer_1.c **** }
 158              		.loc 1 226 0
 159 001a BD46     		mov	sp, r7
 160              		@ sp needed
 161 001c 80BD     		pop	{r7, pc}
 162              	.L10:
 163 001e C046     		.align	2
 164              	.L9:
 165 0020 00000000 		.word	Timer_1_initVar
 166              		.cfi_endproc
 167              	.LFE4:
 168              		.size	Timer_1_Start, .-Timer_1_Start
 169              		.section	.text.Timer_1_Stop,"ax",%progbits
 170              		.align	2
 171              		.global	Timer_1_Stop
 172              		.code	16
 173              		.thumb_func
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 8


 174              		.type	Timer_1_Stop, %function
 175              	Timer_1_Stop:
 176              	.LFB5:
 227:Generated_Source\PSoC4/Timer_1.c **** 
 228:Generated_Source\PSoC4/Timer_1.c **** 
 229:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 230:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_Stop
 231:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 232:Generated_Source\PSoC4/Timer_1.c **** *
 233:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 234:Generated_Source\PSoC4/Timer_1.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC4/Timer_1.c **** *  interrupts.
 236:Generated_Source\PSoC4/Timer_1.c **** *
 237:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 238:Generated_Source\PSoC4/Timer_1.c **** *  void
 239:Generated_Source\PSoC4/Timer_1.c **** *
 240:Generated_Source\PSoC4/Timer_1.c **** * Return:
 241:Generated_Source\PSoC4/Timer_1.c **** *  void
 242:Generated_Source\PSoC4/Timer_1.c **** *
 243:Generated_Source\PSoC4/Timer_1.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC4/Timer_1.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC4/Timer_1.c **** *
 246:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 247:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_Stop(void) 
 248:Generated_Source\PSoC4/Timer_1.c **** {
 177              		.loc 1 248 0
 178              		.cfi_startproc
 179 0000 80B5     		push	{r7, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 7, -8
 182              		.cfi_offset 14, -4
 183 0002 00AF     		add	r7, sp, #0
 184              		.cfi_def_cfa_register 7
 249:Generated_Source\PSoC4/Timer_1.c ****     /* Disable Timer */
 250:Generated_Source\PSoC4/Timer_1.c ****     #if(!Timer_1_UDB_CONTROL_REG_REMOVED || Timer_1_UsingFixedFunction)
 251:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_ENABLE));
 185              		.loc 1 251 0
 186 0004 044A     		ldr	r2, .L12
 187 0006 044B     		ldr	r3, .L12
 188 0008 1B78     		ldrb	r3, [r3]
 189 000a DBB2     		uxtb	r3, r3
 190 000c 7F21     		mov	r1, #127
 191 000e 0B40     		and	r3, r1
 192 0010 DBB2     		uxtb	r3, r3
 193 0012 1370     		strb	r3, [r2]
 252:Generated_Source\PSoC4/Timer_1.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC4/Timer_1.c **** 
 254:Generated_Source\PSoC4/Timer_1.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC4/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
 256:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_GLOBAL_ENABLE &= ((uint8)(~Timer_1_BLOCK_EN_MASK));
 257:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_1_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC4/Timer_1.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC4/Timer_1.c **** }
 194              		.loc 1 259 0
 195 0014 BD46     		mov	sp, r7
 196              		@ sp needed
 197 0016 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 9


 198              	.L13:
 199              		.align	2
 200              	.L12:
 201 0018 70000F40 		.word	1074724976
 202              		.cfi_endproc
 203              	.LFE5:
 204              		.size	Timer_1_Stop, .-Timer_1_Stop
 205              		.section	.text.Timer_1_SetInterruptMode,"ax",%progbits
 206              		.align	2
 207              		.global	Timer_1_SetInterruptMode
 208              		.code	16
 209              		.thumb_func
 210              		.type	Timer_1_SetInterruptMode, %function
 211              	Timer_1_SetInterruptMode:
 212              	.LFB6:
 260:Generated_Source\PSoC4/Timer_1.c **** 
 261:Generated_Source\PSoC4/Timer_1.c **** 
 262:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 263:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetInterruptMode
 264:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 265:Generated_Source\PSoC4/Timer_1.c **** *
 266:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 267:Generated_Source\PSoC4/Timer_1.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC4/Timer_1.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC4/Timer_1.c **** *  be selected.
 270:Generated_Source\PSoC4/Timer_1.c **** *
 271:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 272:Generated_Source\PSoC4/Timer_1.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC4/Timer_1.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC4/Timer_1.c **** *
 275:Generated_Source\PSoC4/Timer_1.c **** * Return:
 276:Generated_Source\PSoC4/Timer_1.c **** *  void
 277:Generated_Source\PSoC4/Timer_1.c **** *
 278:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 279:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC4/Timer_1.c **** {
 213              		.loc 1 280 0
 214              		.cfi_startproc
 215 0000 80B5     		push	{r7, lr}
 216              		.cfi_def_cfa_offset 8
 217              		.cfi_offset 7, -8
 218              		.cfi_offset 14, -4
 219 0002 82B0     		sub	sp, sp, #8
 220              		.cfi_def_cfa_offset 16
 221 0004 00AF     		add	r7, sp, #0
 222              		.cfi_def_cfa_register 7
 223 0006 021C     		mov	r2, r0
 224 0008 FB1D     		add	r3, r7, #7
 225 000a 1A70     		strb	r2, [r3]
 281:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_STATUS_MASK = interruptMode;
 226              		.loc 1 281 0
 227 000c 034A     		ldr	r2, .L15
 228 000e FB1D     		add	r3, r7, #7
 229 0010 1B78     		ldrb	r3, [r3]
 230 0012 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC4/Timer_1.c **** }
 231              		.loc 1 282 0
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 10


 232 0014 BD46     		mov	sp, r7
 233 0016 02B0     		add	sp, sp, #8
 234              		@ sp needed
 235 0018 80BD     		pop	{r7, pc}
 236              	.L16:
 237 001a C046     		.align	2
 238              	.L15:
 239 001c 83000F40 		.word	1074724995
 240              		.cfi_endproc
 241              	.LFE6:
 242              		.size	Timer_1_SetInterruptMode, .-Timer_1_SetInterruptMode
 243              		.section	.text.Timer_1_SoftwareCapture,"ax",%progbits
 244              		.align	2
 245              		.global	Timer_1_SoftwareCapture
 246              		.code	16
 247              		.thumb_func
 248              		.type	Timer_1_SoftwareCapture, %function
 249              	Timer_1_SoftwareCapture:
 250              	.LFB7:
 283:Generated_Source\PSoC4/Timer_1.c **** 
 284:Generated_Source\PSoC4/Timer_1.c **** 
 285:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 286:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SoftwareCapture
 287:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 288:Generated_Source\PSoC4/Timer_1.c **** *
 289:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 290:Generated_Source\PSoC4/Timer_1.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC4/Timer_1.c **** *
 292:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 293:Generated_Source\PSoC4/Timer_1.c **** *  void
 294:Generated_Source\PSoC4/Timer_1.c **** *
 295:Generated_Source\PSoC4/Timer_1.c **** * Return:
 296:Generated_Source\PSoC4/Timer_1.c **** *  void
 297:Generated_Source\PSoC4/Timer_1.c **** *
 298:Generated_Source\PSoC4/Timer_1.c **** * Side Effects:
 299:Generated_Source\PSoC4/Timer_1.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC4/Timer_1.c **** *
 301:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 302:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SoftwareCapture(void) 
 303:Generated_Source\PSoC4/Timer_1.c **** {
 251              		.loc 1 303 0
 252              		.cfi_startproc
 253 0000 80B5     		push	{r7, lr}
 254              		.cfi_def_cfa_offset 8
 255              		.cfi_offset 7, -8
 256              		.cfi_offset 14, -4
 257 0002 00AF     		add	r7, sp, #0
 258              		.cfi_def_cfa_register 7
 304:Generated_Source\PSoC4/Timer_1.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC4/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 306:Generated_Source\PSoC4/Timer_1.c ****         (void)CY_GET_REG16(Timer_1_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC4/Timer_1.c ****     #else
 308:Generated_Source\PSoC4/Timer_1.c ****         (void)CY_GET_REG8(Timer_1_COUNTER_LSB_PTR_8BIT);
 259              		.loc 1 308 0
 260 0004 014B     		ldr	r3, .L18
 261 0006 1B78     		ldrb	r3, [r3]
 309:Generated_Source\PSoC4/Timer_1.c ****     #endif/* (Timer_1_UsingFixedFunction) */
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 11


 310:Generated_Source\PSoC4/Timer_1.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC4/Timer_1.c **** }
 262              		.loc 1 311 0
 263 0008 BD46     		mov	sp, r7
 264              		@ sp needed
 265 000a 80BD     		pop	{r7, pc}
 266              	.L19:
 267              		.align	2
 268              	.L18:
 269 000c 00000F40 		.word	1074724864
 270              		.cfi_endproc
 271              	.LFE7:
 272              		.size	Timer_1_SoftwareCapture, .-Timer_1_SoftwareCapture
 273              		.section	.text.Timer_1_ReadStatusRegister,"ax",%progbits
 274              		.align	2
 275              		.global	Timer_1_ReadStatusRegister
 276              		.code	16
 277              		.thumb_func
 278              		.type	Timer_1_ReadStatusRegister, %function
 279              	Timer_1_ReadStatusRegister:
 280              	.LFB8:
 312:Generated_Source\PSoC4/Timer_1.c **** 
 313:Generated_Source\PSoC4/Timer_1.c **** 
 314:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 315:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadStatusRegister
 316:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 317:Generated_Source\PSoC4/Timer_1.c **** *
 318:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 319:Generated_Source\PSoC4/Timer_1.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC4/Timer_1.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC4/Timer_1.c **** *  be permuteable.
 322:Generated_Source\PSoC4/Timer_1.c **** *
 323:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 324:Generated_Source\PSoC4/Timer_1.c **** *  void
 325:Generated_Source\PSoC4/Timer_1.c **** *
 326:Generated_Source\PSoC4/Timer_1.c **** * Return:
 327:Generated_Source\PSoC4/Timer_1.c **** *  The contents of the status register
 328:Generated_Source\PSoC4/Timer_1.c **** *
 329:Generated_Source\PSoC4/Timer_1.c **** * Side Effects:
 330:Generated_Source\PSoC4/Timer_1.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC4/Timer_1.c **** *
 332:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 333:Generated_Source\PSoC4/Timer_1.c **** uint8   Timer_1_ReadStatusRegister(void) 
 334:Generated_Source\PSoC4/Timer_1.c **** {
 281              		.loc 1 334 0
 282              		.cfi_startproc
 283 0000 80B5     		push	{r7, lr}
 284              		.cfi_def_cfa_offset 8
 285              		.cfi_offset 7, -8
 286              		.cfi_offset 14, -4
 287 0002 00AF     		add	r7, sp, #0
 288              		.cfi_def_cfa_register 7
 335:Generated_Source\PSoC4/Timer_1.c ****     return (Timer_1_STATUS);
 289              		.loc 1 335 0
 290 0004 024B     		ldr	r3, .L22
 291 0006 1B78     		ldrb	r3, [r3]
 292 0008 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 12


 336:Generated_Source\PSoC4/Timer_1.c **** }
 293              		.loc 1 336 0
 294 000a 181C     		mov	r0, r3
 295 000c BD46     		mov	sp, r7
 296              		@ sp needed
 297 000e 80BD     		pop	{r7, pc}
 298              	.L23:
 299              		.align	2
 300              	.L22:
 301 0010 63000F40 		.word	1074724963
 302              		.cfi_endproc
 303              	.LFE8:
 304              		.size	Timer_1_ReadStatusRegister, .-Timer_1_ReadStatusRegister
 305              		.section	.text.Timer_1_ReadControlRegister,"ax",%progbits
 306              		.align	2
 307              		.global	Timer_1_ReadControlRegister
 308              		.code	16
 309              		.thumb_func
 310              		.type	Timer_1_ReadControlRegister, %function
 311              	Timer_1_ReadControlRegister:
 312              	.LFB9:
 337:Generated_Source\PSoC4/Timer_1.c **** 
 338:Generated_Source\PSoC4/Timer_1.c **** 
 339:Generated_Source\PSoC4/Timer_1.c **** #if (!Timer_1_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC4/Timer_1.c **** 
 341:Generated_Source\PSoC4/Timer_1.c **** 
 342:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 343:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadControlRegister
 344:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 345:Generated_Source\PSoC4/Timer_1.c **** *
 346:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 347:Generated_Source\PSoC4/Timer_1.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC4/Timer_1.c **** *
 349:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 350:Generated_Source\PSoC4/Timer_1.c **** *  void
 351:Generated_Source\PSoC4/Timer_1.c **** *
 352:Generated_Source\PSoC4/Timer_1.c **** * Return:
 353:Generated_Source\PSoC4/Timer_1.c **** *  The contents of the control register
 354:Generated_Source\PSoC4/Timer_1.c **** *
 355:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 356:Generated_Source\PSoC4/Timer_1.c **** uint8 Timer_1_ReadControlRegister(void) 
 357:Generated_Source\PSoC4/Timer_1.c **** {
 313              		.loc 1 357 0
 314              		.cfi_startproc
 315 0000 80B5     		push	{r7, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 00AF     		add	r7, sp, #0
 320              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC4/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC4/Timer_1.c ****         return ((uint8)Timer_1_CONTROL);
 321              		.loc 1 359 0
 322 0004 024B     		ldr	r3, .L26
 323 0006 1B78     		ldrb	r3, [r3]
 324 0008 DBB2     		uxtb	r3, r3
 360:Generated_Source\PSoC4/Timer_1.c ****     #else
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 13


 361:Generated_Source\PSoC4/Timer_1.c ****         return (0);
 362:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC4/Timer_1.c **** }
 325              		.loc 1 363 0
 326 000a 181C     		mov	r0, r3
 327 000c BD46     		mov	sp, r7
 328              		@ sp needed
 329 000e 80BD     		pop	{r7, pc}
 330              	.L27:
 331              		.align	2
 332              	.L26:
 333 0010 70000F40 		.word	1074724976
 334              		.cfi_endproc
 335              	.LFE9:
 336              		.size	Timer_1_ReadControlRegister, .-Timer_1_ReadControlRegister
 337              		.section	.text.Timer_1_WriteControlRegister,"ax",%progbits
 338              		.align	2
 339              		.global	Timer_1_WriteControlRegister
 340              		.code	16
 341              		.thumb_func
 342              		.type	Timer_1_WriteControlRegister, %function
 343              	Timer_1_WriteControlRegister:
 344              	.LFB10:
 364:Generated_Source\PSoC4/Timer_1.c **** 
 365:Generated_Source\PSoC4/Timer_1.c **** 
 366:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 367:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_WriteControlRegister
 368:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 369:Generated_Source\PSoC4/Timer_1.c **** *
 370:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 371:Generated_Source\PSoC4/Timer_1.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC4/Timer_1.c **** *
 373:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 374:Generated_Source\PSoC4/Timer_1.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC4/Timer_1.c **** *
 376:Generated_Source\PSoC4/Timer_1.c **** * Return:
 377:Generated_Source\PSoC4/Timer_1.c **** *
 378:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 379:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC4/Timer_1.c **** {
 345              		.loc 1 380 0
 346              		.cfi_startproc
 347 0000 80B5     		push	{r7, lr}
 348              		.cfi_def_cfa_offset 8
 349              		.cfi_offset 7, -8
 350              		.cfi_offset 14, -4
 351 0002 82B0     		sub	sp, sp, #8
 352              		.cfi_def_cfa_offset 16
 353 0004 00AF     		add	r7, sp, #0
 354              		.cfi_def_cfa_register 7
 355 0006 021C     		mov	r2, r0
 356 0008 FB1D     		add	r3, r7, #7
 357 000a 1A70     		strb	r2, [r3]
 381:Generated_Source\PSoC4/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL = control;
 358              		.loc 1 382 0
 359 000c 034A     		ldr	r2, .L29
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 14


 360 000e FB1D     		add	r3, r7, #7
 361 0010 1B78     		ldrb	r3, [r3]
 362 0012 1370     		strb	r3, [r2]
 383:Generated_Source\PSoC4/Timer_1.c ****     #else
 384:Generated_Source\PSoC4/Timer_1.c ****         control = 0u;
 385:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC4/Timer_1.c **** }
 363              		.loc 1 386 0
 364 0014 BD46     		mov	sp, r7
 365 0016 02B0     		add	sp, sp, #8
 366              		@ sp needed
 367 0018 80BD     		pop	{r7, pc}
 368              	.L30:
 369 001a C046     		.align	2
 370              	.L29:
 371 001c 70000F40 		.word	1074724976
 372              		.cfi_endproc
 373              	.LFE10:
 374              		.size	Timer_1_WriteControlRegister, .-Timer_1_WriteControlRegister
 375              		.section	.text.Timer_1_ReadPeriod,"ax",%progbits
 376              		.align	2
 377              		.global	Timer_1_ReadPeriod
 378              		.code	16
 379              		.thumb_func
 380              		.type	Timer_1_ReadPeriod, %function
 381              	Timer_1_ReadPeriod:
 382              	.LFB11:
 387:Generated_Source\PSoC4/Timer_1.c **** 
 388:Generated_Source\PSoC4/Timer_1.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC4/Timer_1.c **** 
 390:Generated_Source\PSoC4/Timer_1.c **** 
 391:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 392:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadPeriod
 393:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 394:Generated_Source\PSoC4/Timer_1.c **** *
 395:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 396:Generated_Source\PSoC4/Timer_1.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC4/Timer_1.c **** *
 398:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 399:Generated_Source\PSoC4/Timer_1.c **** *  void
 400:Generated_Source\PSoC4/Timer_1.c **** *
 401:Generated_Source\PSoC4/Timer_1.c **** * Return:
 402:Generated_Source\PSoC4/Timer_1.c **** *  The present value of the counter.
 403:Generated_Source\PSoC4/Timer_1.c **** *
 404:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 405:Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadPeriod(void) 
 406:Generated_Source\PSoC4/Timer_1.c **** {
 383              		.loc 1 406 0
 384              		.cfi_startproc
 385 0000 80B5     		push	{r7, lr}
 386              		.cfi_def_cfa_offset 8
 387              		.cfi_offset 7, -8
 388              		.cfi_offset 14, -4
 389 0002 00AF     		add	r7, sp, #0
 390              		.cfi_def_cfa_register 7
 407:Generated_Source\PSoC4/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 408:Generated_Source\PSoC4/Timer_1.c ****        return ((uint32)CY_GET_REG16(Timer_1_PERIOD_LSB_PTR));
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 15


 409:Generated_Source\PSoC4/Timer_1.c ****    #else
 410:Generated_Source\PSoC4/Timer_1.c ****        return (CY_GET_REG32(Timer_1_PERIOD_LSB_PTR));
 391              		.loc 1 410 0
 392 0004 024B     		ldr	r3, .L33
 393 0006 1B68     		ldr	r3, [r3]
 411:Generated_Source\PSoC4/Timer_1.c ****    #endif /* (Timer_1_UsingFixedFunction) */
 412:Generated_Source\PSoC4/Timer_1.c **** }
 394              		.loc 1 412 0
 395 0008 181C     		mov	r0, r3
 396 000a BD46     		mov	sp, r7
 397              		@ sp needed
 398 000c 80BD     		pop	{r7, pc}
 399              	.L34:
 400 000e C046     		.align	2
 401              	.L33:
 402 0010 80200F40 		.word	1074733184
 403              		.cfi_endproc
 404              	.LFE11:
 405              		.size	Timer_1_ReadPeriod, .-Timer_1_ReadPeriod
 406              		.section	.text.Timer_1_WritePeriod,"ax",%progbits
 407              		.align	2
 408              		.global	Timer_1_WritePeriod
 409              		.code	16
 410              		.thumb_func
 411              		.type	Timer_1_WritePeriod, %function
 412              	Timer_1_WritePeriod:
 413              	.LFB12:
 413:Generated_Source\PSoC4/Timer_1.c **** 
 414:Generated_Source\PSoC4/Timer_1.c **** 
 415:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 416:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_WritePeriod
 417:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 418:Generated_Source\PSoC4/Timer_1.c **** *
 419:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 420:Generated_Source\PSoC4/Timer_1.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC4/Timer_1.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC4/Timer_1.c **** *
 423:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 424:Generated_Source\PSoC4/Timer_1.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC4/Timer_1.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC4/Timer_1.c **** *
 427:Generated_Source\PSoC4/Timer_1.c **** * Return:
 428:Generated_Source\PSoC4/Timer_1.c **** *  void
 429:Generated_Source\PSoC4/Timer_1.c **** *
 430:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 431:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_WritePeriod(uint32 period) 
 432:Generated_Source\PSoC4/Timer_1.c **** {
 414              		.loc 1 432 0
 415              		.cfi_startproc
 416 0000 80B5     		push	{r7, lr}
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 7, -8
 419              		.cfi_offset 14, -4
 420 0002 82B0     		sub	sp, sp, #8
 421              		.cfi_def_cfa_offset 16
 422 0004 00AF     		add	r7, sp, #0
 423              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 16


 424 0006 7860     		str	r0, [r7, #4]
 433:Generated_Source\PSoC4/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 434:Generated_Source\PSoC4/Timer_1.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC4/Timer_1.c ****         CY_SET_REG16(Timer_1_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC4/Timer_1.c ****     #else
 437:Generated_Source\PSoC4/Timer_1.c ****         CY_SET_REG32(Timer_1_PERIOD_LSB_PTR, period);
 425              		.loc 1 437 0
 426 0008 024B     		ldr	r3, .L36
 427 000a 7A68     		ldr	r2, [r7, #4]
 428 000c 1A60     		str	r2, [r3]
 438:Generated_Source\PSoC4/Timer_1.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC4/Timer_1.c **** }
 429              		.loc 1 439 0
 430 000e BD46     		mov	sp, r7
 431 0010 02B0     		add	sp, sp, #8
 432              		@ sp needed
 433 0012 80BD     		pop	{r7, pc}
 434              	.L37:
 435              		.align	2
 436              	.L36:
 437 0014 80200F40 		.word	1074733184
 438              		.cfi_endproc
 439              	.LFE12:
 440              		.size	Timer_1_WritePeriod, .-Timer_1_WritePeriod
 441              		.section	.text.Timer_1_ReadCapture,"ax",%progbits
 442              		.align	2
 443              		.global	Timer_1_ReadCapture
 444              		.code	16
 445              		.thumb_func
 446              		.type	Timer_1_ReadCapture, %function
 447              	Timer_1_ReadCapture:
 448              	.LFB13:
 440:Generated_Source\PSoC4/Timer_1.c **** 
 441:Generated_Source\PSoC4/Timer_1.c **** 
 442:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 443:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadCapture
 444:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 445:Generated_Source\PSoC4/Timer_1.c **** *
 446:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 447:Generated_Source\PSoC4/Timer_1.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC4/Timer_1.c **** *
 449:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 450:Generated_Source\PSoC4/Timer_1.c **** *  void
 451:Generated_Source\PSoC4/Timer_1.c **** *
 452:Generated_Source\PSoC4/Timer_1.c **** * Return:
 453:Generated_Source\PSoC4/Timer_1.c **** *  Present Capture value.
 454:Generated_Source\PSoC4/Timer_1.c **** *
 455:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 456:Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadCapture(void) 
 457:Generated_Source\PSoC4/Timer_1.c **** {
 449              		.loc 1 457 0
 450              		.cfi_startproc
 451 0000 80B5     		push	{r7, lr}
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 7, -8
 454              		.cfi_offset 14, -4
 455 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 17


 456              		.cfi_def_cfa_register 7
 458:Generated_Source\PSoC4/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 459:Generated_Source\PSoC4/Timer_1.c ****        return ((uint32)CY_GET_REG16(Timer_1_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC4/Timer_1.c ****    #else
 461:Generated_Source\PSoC4/Timer_1.c ****        return (CY_GET_REG32(Timer_1_CAPTURE_LSB_PTR));
 457              		.loc 1 461 0
 458 0004 024B     		ldr	r3, .L40
 459 0006 1B68     		ldr	r3, [r3]
 462:Generated_Source\PSoC4/Timer_1.c ****    #endif /* (Timer_1_UsingFixedFunction) */
 463:Generated_Source\PSoC4/Timer_1.c **** }
 460              		.loc 1 463 0
 461 0008 181C     		mov	r0, r3
 462 000a BD46     		mov	sp, r7
 463              		@ sp needed
 464 000c 80BD     		pop	{r7, pc}
 465              	.L41:
 466 000e C046     		.align	2
 467              	.L40:
 468 0010 00210F40 		.word	1074733312
 469              		.cfi_endproc
 470              	.LFE13:
 471              		.size	Timer_1_ReadCapture, .-Timer_1_ReadCapture
 472              		.section	.text.Timer_1_WriteCounter,"ax",%progbits
 473              		.align	2
 474              		.global	Timer_1_WriteCounter
 475              		.code	16
 476              		.thumb_func
 477              		.type	Timer_1_WriteCounter, %function
 478              	Timer_1_WriteCounter:
 479              	.LFB14:
 464:Generated_Source\PSoC4/Timer_1.c **** 
 465:Generated_Source\PSoC4/Timer_1.c **** 
 466:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_WriteCounter
 468:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 469:Generated_Source\PSoC4/Timer_1.c **** *
 470:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 471:Generated_Source\PSoC4/Timer_1.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC4/Timer_1.c **** *
 473:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 474:Generated_Source\PSoC4/Timer_1.c **** *  counter:  New counter value.
 475:Generated_Source\PSoC4/Timer_1.c **** *
 476:Generated_Source\PSoC4/Timer_1.c **** * Return:
 477:Generated_Source\PSoC4/Timer_1.c **** *  void
 478:Generated_Source\PSoC4/Timer_1.c **** *
 479:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 480:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_WriteCounter(uint32 counter) 
 481:Generated_Source\PSoC4/Timer_1.c **** {
 480              		.loc 1 481 0
 481              		.cfi_startproc
 482 0000 80B5     		push	{r7, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 82B0     		sub	sp, sp, #8
 487              		.cfi_def_cfa_offset 16
 488 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 18


 489              		.cfi_def_cfa_register 7
 490 0006 7860     		str	r0, [r7, #4]
 482:Generated_Source\PSoC4/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 483:Generated_Source\PSoC4/Timer_1.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC4/Timer_1.c ****          * allow this register to be written
 485:Generated_Source\PSoC4/Timer_1.c ****          */
 486:Generated_Source\PSoC4/Timer_1.c ****         CY_SET_REG16(Timer_1_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC4/Timer_1.c ****         
 488:Generated_Source\PSoC4/Timer_1.c ****     #else
 489:Generated_Source\PSoC4/Timer_1.c ****         CY_SET_REG32(Timer_1_COUNTER_LSB_PTR, counter);
 491              		.loc 1 489 0
 492 0008 024B     		ldr	r3, .L43
 493 000a 7A68     		ldr	r2, [r7, #4]
 494 000c 1A60     		str	r2, [r3]
 490:Generated_Source\PSoC4/Timer_1.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC4/Timer_1.c **** }
 495              		.loc 1 491 0
 496 000e BD46     		mov	sp, r7
 497 0010 02B0     		add	sp, sp, #8
 498              		@ sp needed
 499 0012 80BD     		pop	{r7, pc}
 500              	.L44:
 501              		.align	2
 502              	.L43:
 503 0014 00200F40 		.word	1074733056
 504              		.cfi_endproc
 505              	.LFE14:
 506              		.size	Timer_1_WriteCounter, .-Timer_1_WriteCounter
 507              		.section	.text.Timer_1_ReadCounter,"ax",%progbits
 508              		.align	2
 509              		.global	Timer_1_ReadCounter
 510              		.code	16
 511              		.thumb_func
 512              		.type	Timer_1_ReadCounter, %function
 513              	Timer_1_ReadCounter:
 514              	.LFB15:
 492:Generated_Source\PSoC4/Timer_1.c **** 
 493:Generated_Source\PSoC4/Timer_1.c **** 
 494:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 495:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadCounter
 496:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 497:Generated_Source\PSoC4/Timer_1.c **** *
 498:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 499:Generated_Source\PSoC4/Timer_1.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC4/Timer_1.c **** *
 501:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 502:Generated_Source\PSoC4/Timer_1.c **** *  void
 503:Generated_Source\PSoC4/Timer_1.c **** *
 504:Generated_Source\PSoC4/Timer_1.c **** * Return:
 505:Generated_Source\PSoC4/Timer_1.c **** *  Present compare value.
 506:Generated_Source\PSoC4/Timer_1.c **** *
 507:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 508:Generated_Source\PSoC4/Timer_1.c **** uint32 Timer_1_ReadCounter(void) 
 509:Generated_Source\PSoC4/Timer_1.c **** {
 515              		.loc 1 509 0
 516              		.cfi_startproc
 517 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 19


 518              		.cfi_def_cfa_offset 8
 519              		.cfi_offset 7, -8
 520              		.cfi_offset 14, -4
 521 0002 00AF     		add	r7, sp, #0
 522              		.cfi_def_cfa_register 7
 510:Generated_Source\PSoC4/Timer_1.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC4/Timer_1.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC4/Timer_1.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC4/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 514:Generated_Source\PSoC4/Timer_1.c ****         (void)CY_GET_REG16(Timer_1_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC4/Timer_1.c ****     #else
 516:Generated_Source\PSoC4/Timer_1.c ****         (void)CY_GET_REG8(Timer_1_COUNTER_LSB_PTR_8BIT);
 523              		.loc 1 516 0
 524 0004 034B     		ldr	r3, .L47
 525 0006 1B78     		ldrb	r3, [r3]
 517:Generated_Source\PSoC4/Timer_1.c ****     #endif/* (Timer_1_UsingFixedFunction) */
 518:Generated_Source\PSoC4/Timer_1.c **** 
 519:Generated_Source\PSoC4/Timer_1.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC4/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 521:Generated_Source\PSoC4/Timer_1.c ****         return ((uint32)CY_GET_REG16(Timer_1_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC4/Timer_1.c ****     #else
 523:Generated_Source\PSoC4/Timer_1.c ****         return (CY_GET_REG32(Timer_1_CAPTURE_LSB_PTR));
 526              		.loc 1 523 0
 527 0008 034B     		ldr	r3, .L47+4
 528 000a 1B68     		ldr	r3, [r3]
 524:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (Timer_1_UsingFixedFunction) */
 525:Generated_Source\PSoC4/Timer_1.c **** }
 529              		.loc 1 525 0
 530 000c 181C     		mov	r0, r3
 531 000e BD46     		mov	sp, r7
 532              		@ sp needed
 533 0010 80BD     		pop	{r7, pc}
 534              	.L48:
 535 0012 C046     		.align	2
 536              	.L47:
 537 0014 00000F40 		.word	1074724864
 538 0018 00210F40 		.word	1074733312
 539              		.cfi_endproc
 540              	.LFE15:
 541              		.size	Timer_1_ReadCounter, .-Timer_1_ReadCounter
 542              		.section	.text.Timer_1_SetCaptureMode,"ax",%progbits
 543              		.align	2
 544              		.global	Timer_1_SetCaptureMode
 545              		.code	16
 546              		.thumb_func
 547              		.type	Timer_1_SetCaptureMode, %function
 548              	Timer_1_SetCaptureMode:
 549              	.LFB16:
 526:Generated_Source\PSoC4/Timer_1.c **** 
 527:Generated_Source\PSoC4/Timer_1.c **** 
 528:Generated_Source\PSoC4/Timer_1.c **** #if(!Timer_1_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC4/Timer_1.c **** 
 530:Generated_Source\PSoC4/Timer_1.c ****     
 531:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 532:Generated_Source\PSoC4/Timer_1.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC4/Timer_1.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC4/Timer_1.c ****  ******************************************************************************/
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 20


 535:Generated_Source\PSoC4/Timer_1.c **** 
 536:Generated_Source\PSoC4/Timer_1.c **** 
 537:Generated_Source\PSoC4/Timer_1.c **** #if (Timer_1_SoftwareCaptureMode)
 538:Generated_Source\PSoC4/Timer_1.c **** 
 539:Generated_Source\PSoC4/Timer_1.c **** 
 540:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 541:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetCaptureMode
 542:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 543:Generated_Source\PSoC4/Timer_1.c **** *
 544:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 545:Generated_Source\PSoC4/Timer_1.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC4/Timer_1.c **** *
 547:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 548:Generated_Source\PSoC4/Timer_1.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC4/Timer_1.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC4/Timer_1.c **** *  #define Timer_1__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC4/Timer_1.c **** #define Timer_1__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC4/Timer_1.c **** #define Timer_1__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC4/Timer_1.c **** #define Timer_1__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC4/Timer_1.c **** #define Timer_1__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC4/Timer_1.c ****  identifiers
 556:Generated_Source\PSoC4/Timer_1.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC4/Timer_1.c **** *  Timer_1__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC4/Timer_1.c **** *  Timer_1__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC4/Timer_1.c **** *  Timer_1__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC4/Timer_1.c **** *  Timer_1__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC4/Timer_1.c **** *
 562:Generated_Source\PSoC4/Timer_1.c **** * Return:
 563:Generated_Source\PSoC4/Timer_1.c **** *  void
 564:Generated_Source\PSoC4/Timer_1.c **** *
 565:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 566:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC4/Timer_1.c **** {
 550              		.loc 1 567 0
 551              		.cfi_startproc
 552 0000 80B5     		push	{r7, lr}
 553              		.cfi_def_cfa_offset 8
 554              		.cfi_offset 7, -8
 555              		.cfi_offset 14, -4
 556 0002 82B0     		sub	sp, sp, #8
 557              		.cfi_def_cfa_offset 16
 558 0004 00AF     		add	r7, sp, #0
 559              		.cfi_def_cfa_register 7
 560 0006 021C     		mov	r2, r0
 561 0008 FB1D     		add	r3, r7, #7
 562 000a 1A70     		strb	r2, [r3]
 568:Generated_Source\PSoC4/Timer_1.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC4/Timer_1.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_1_CTRL_CAP_MODE_SHIFT));
 563              		.loc 1 569 0
 564 000c FB1D     		add	r3, r7, #7
 565 000e FA1D     		add	r2, r7, #7
 566 0010 1278     		ldrb	r2, [r2]
 567 0012 5201     		lsl	r2, r2, #5
 568 0014 1A70     		strb	r2, [r3]
 570:Generated_Source\PSoC4/Timer_1.c ****     captureMode &= (Timer_1_CTRL_CAP_MODE_MASK);
 569              		.loc 1 570 0
 570 0016 FB1D     		add	r3, r7, #7
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 21


 571 0018 FA1D     		add	r2, r7, #7
 572 001a 1278     		ldrb	r2, [r2]
 573 001c 6021     		mov	r1, #96
 574 001e 0A40     		and	r2, r1
 575 0020 1A70     		strb	r2, [r3]
 571:Generated_Source\PSoC4/Timer_1.c **** 
 572:Generated_Source\PSoC4/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC4/Timer_1.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_CAP_MODE_MASK));
 576              		.loc 1 574 0
 577 0022 0A4A     		ldr	r2, .L50
 578 0024 094B     		ldr	r3, .L50
 579 0026 1B78     		ldrb	r3, [r3]
 580 0028 DBB2     		uxtb	r3, r3
 581 002a 6021     		mov	r1, #96
 582 002c 8B43     		bic	r3, r1
 583 002e DBB2     		uxtb	r3, r3
 584 0030 1370     		strb	r3, [r2]
 575:Generated_Source\PSoC4/Timer_1.c **** 
 576:Generated_Source\PSoC4/Timer_1.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL |= captureMode;
 585              		.loc 1 577 0
 586 0032 0649     		ldr	r1, .L50
 587 0034 054B     		ldr	r3, .L50
 588 0036 1B78     		ldrb	r3, [r3]
 589 0038 DAB2     		uxtb	r2, r3
 590 003a FB1D     		add	r3, r7, #7
 591 003c 1B78     		ldrb	r3, [r3]
 592 003e 1343     		orr	r3, r2
 593 0040 DBB2     		uxtb	r3, r3
 594 0042 0B70     		strb	r3, [r1]
 578:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC4/Timer_1.c **** }
 595              		.loc 1 579 0
 596 0044 BD46     		mov	sp, r7
 597 0046 02B0     		add	sp, sp, #8
 598              		@ sp needed
 599 0048 80BD     		pop	{r7, pc}
 600              	.L51:
 601 004a C046     		.align	2
 602              	.L50:
 603 004c 70000F40 		.word	1074724976
 604              		.cfi_endproc
 605              	.LFE16:
 606              		.size	Timer_1_SetCaptureMode, .-Timer_1_SetCaptureMode
 607              		.section	.text.Timer_1_ClearFIFO,"ax",%progbits
 608              		.align	2
 609              		.global	Timer_1_ClearFIFO
 610              		.code	16
 611              		.thumb_func
 612              		.type	Timer_1_ClearFIFO, %function
 613              	Timer_1_ClearFIFO:
 614              	.LFB17:
 580:Generated_Source\PSoC4/Timer_1.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC4/Timer_1.c **** 
 582:Generated_Source\PSoC4/Timer_1.c **** 
 583:Generated_Source\PSoC4/Timer_1.c **** #if (Timer_1_SoftwareTriggerMode)
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 22


 584:Generated_Source\PSoC4/Timer_1.c **** 
 585:Generated_Source\PSoC4/Timer_1.c **** 
 586:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 587:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetTriggerMode
 588:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 589:Generated_Source\PSoC4/Timer_1.c **** *
 590:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 591:Generated_Source\PSoC4/Timer_1.c **** *  This function sets the trigger input mode
 592:Generated_Source\PSoC4/Timer_1.c **** *
 593:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 594:Generated_Source\PSoC4/Timer_1.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC4/Timer_1.c ****     #define Timer_1__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC4/Timer_1.c ****     #define Timer_1__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC4/Timer_1.c ****     #define Timer_1__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC4/Timer_1.c ****     #define Timer_1__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC4/Timer_1.c ****     #define Timer_1__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC4/Timer_1.c **** *
 601:Generated_Source\PSoC4/Timer_1.c **** * Return:
 602:Generated_Source\PSoC4/Timer_1.c **** *  void
 603:Generated_Source\PSoC4/Timer_1.c **** *
 604:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 605:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC4/Timer_1.c **** {
 607:Generated_Source\PSoC4/Timer_1.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC4/Timer_1.c ****     triggerMode &= Timer_1_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC4/Timer_1.c **** 
 610:Generated_Source\PSoC4/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 611:Generated_Source\PSoC4/Timer_1.c ****     
 612:Generated_Source\PSoC4/Timer_1.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC4/Timer_1.c **** 
 615:Generated_Source\PSoC4/Timer_1.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL |= (triggerMode | Timer_1__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC4/Timer_1.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC4/Timer_1.c **** }
 619:Generated_Source\PSoC4/Timer_1.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC4/Timer_1.c **** 
 621:Generated_Source\PSoC4/Timer_1.c **** #if (Timer_1_EnableTriggerMode)
 622:Generated_Source\PSoC4/Timer_1.c **** 
 623:Generated_Source\PSoC4/Timer_1.c **** 
 624:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 625:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_EnableTrigger
 626:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 627:Generated_Source\PSoC4/Timer_1.c **** *
 628:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 629:Generated_Source\PSoC4/Timer_1.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC4/Timer_1.c **** *
 631:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 632:Generated_Source\PSoC4/Timer_1.c **** *  void
 633:Generated_Source\PSoC4/Timer_1.c **** *
 634:Generated_Source\PSoC4/Timer_1.c **** * Return:
 635:Generated_Source\PSoC4/Timer_1.c **** *  void
 636:Generated_Source\PSoC4/Timer_1.c **** *
 637:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 638:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_EnableTrigger(void) 
 639:Generated_Source\PSoC4/Timer_1.c **** {
 640:Generated_Source\PSoC4/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 23


 641:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL |= Timer_1_CTRL_TRIG_EN;
 642:Generated_Source\PSoC4/Timer_1.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC4/Timer_1.c **** }
 644:Generated_Source\PSoC4/Timer_1.c **** 
 645:Generated_Source\PSoC4/Timer_1.c **** 
 646:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 647:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_DisableTrigger
 648:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 649:Generated_Source\PSoC4/Timer_1.c **** *
 650:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 651:Generated_Source\PSoC4/Timer_1.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC4/Timer_1.c **** *
 653:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 654:Generated_Source\PSoC4/Timer_1.c **** *  void
 655:Generated_Source\PSoC4/Timer_1.c **** *
 656:Generated_Source\PSoC4/Timer_1.c **** * Return:
 657:Generated_Source\PSoC4/Timer_1.c **** *  void
 658:Generated_Source\PSoC4/Timer_1.c **** *
 659:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 660:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_DisableTrigger(void) 
 661:Generated_Source\PSoC4/Timer_1.c **** {
 662:Generated_Source\PSoC4/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed *
 663:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_TRIG_EN));
 664:Generated_Source\PSoC4/Timer_1.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC4/Timer_1.c **** }
 666:Generated_Source\PSoC4/Timer_1.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC4/Timer_1.c **** 
 668:Generated_Source\PSoC4/Timer_1.c **** #if(Timer_1_InterruptOnCaptureCount)
 669:Generated_Source\PSoC4/Timer_1.c **** 
 670:Generated_Source\PSoC4/Timer_1.c **** 
 671:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 672:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetInterruptCount
 673:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 674:Generated_Source\PSoC4/Timer_1.c **** *
 675:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 676:Generated_Source\PSoC4/Timer_1.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC4/Timer_1.c **** *
 678:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 679:Generated_Source\PSoC4/Timer_1.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC4/Timer_1.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC4/Timer_1.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC4/Timer_1.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC4/Timer_1.c **** *
 684:Generated_Source\PSoC4/Timer_1.c **** * Return:
 685:Generated_Source\PSoC4/Timer_1.c **** *  void
 686:Generated_Source\PSoC4/Timer_1.c **** *
 687:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 688:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC4/Timer_1.c **** {
 690:Generated_Source\PSoC4/Timer_1.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC4/Timer_1.c ****     interruptCount &= Timer_1_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC4/Timer_1.c **** 
 693:Generated_Source\PSoC4/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC4/Timer_1.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC4/Timer_1.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC4/Timer_1.c ****         Timer_1_CONTROL |= interruptCount;
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 24


 698:Generated_Source\PSoC4/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC4/Timer_1.c **** }
 700:Generated_Source\PSoC4/Timer_1.c **** #endif /* Timer_1_InterruptOnCaptureCount */
 701:Generated_Source\PSoC4/Timer_1.c **** 
 702:Generated_Source\PSoC4/Timer_1.c **** 
 703:Generated_Source\PSoC4/Timer_1.c **** #if (Timer_1_UsingHWCaptureCounter)
 704:Generated_Source\PSoC4/Timer_1.c **** 
 705:Generated_Source\PSoC4/Timer_1.c **** 
 706:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 707:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_SetCaptureCount
 708:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 709:Generated_Source\PSoC4/Timer_1.c **** *
 710:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 711:Generated_Source\PSoC4/Timer_1.c **** *  This function sets the capture count
 712:Generated_Source\PSoC4/Timer_1.c **** *
 713:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 714:Generated_Source\PSoC4/Timer_1.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC4/Timer_1.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC4/Timer_1.c **** *                captures.
 717:Generated_Source\PSoC4/Timer_1.c **** *
 718:Generated_Source\PSoC4/Timer_1.c **** * Return:
 719:Generated_Source\PSoC4/Timer_1.c **** *  void
 720:Generated_Source\PSoC4/Timer_1.c **** *
 721:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 722:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC4/Timer_1.c **** {
 724:Generated_Source\PSoC4/Timer_1.c ****     Timer_1_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC4/Timer_1.c **** }
 726:Generated_Source\PSoC4/Timer_1.c **** 
 727:Generated_Source\PSoC4/Timer_1.c **** 
 728:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 729:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ReadCaptureCount
 730:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 731:Generated_Source\PSoC4/Timer_1.c **** *
 732:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 733:Generated_Source\PSoC4/Timer_1.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC4/Timer_1.c **** *
 735:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 736:Generated_Source\PSoC4/Timer_1.c **** *  void
 737:Generated_Source\PSoC4/Timer_1.c **** *
 738:Generated_Source\PSoC4/Timer_1.c **** * Return:
 739:Generated_Source\PSoC4/Timer_1.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC4/Timer_1.c **** *
 741:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 742:Generated_Source\PSoC4/Timer_1.c **** uint8 Timer_1_ReadCaptureCount(void) 
 743:Generated_Source\PSoC4/Timer_1.c **** {
 744:Generated_Source\PSoC4/Timer_1.c ****     return ((uint8)Timer_1_CAP_COUNT);
 745:Generated_Source\PSoC4/Timer_1.c **** }
 746:Generated_Source\PSoC4/Timer_1.c **** #endif /* Timer_1_UsingHWCaptureCounter */
 747:Generated_Source\PSoC4/Timer_1.c **** 
 748:Generated_Source\PSoC4/Timer_1.c **** 
 749:Generated_Source\PSoC4/Timer_1.c **** /*******************************************************************************
 750:Generated_Source\PSoC4/Timer_1.c **** * Function Name: Timer_1_ClearFIFO
 751:Generated_Source\PSoC4/Timer_1.c **** ********************************************************************************
 752:Generated_Source\PSoC4/Timer_1.c **** *
 753:Generated_Source\PSoC4/Timer_1.c **** * Summary:
 754:Generated_Source\PSoC4/Timer_1.c **** *  This function clears all capture data from the capture FIFO
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 25


 755:Generated_Source\PSoC4/Timer_1.c **** *
 756:Generated_Source\PSoC4/Timer_1.c **** * Parameters:
 757:Generated_Source\PSoC4/Timer_1.c **** *  void
 758:Generated_Source\PSoC4/Timer_1.c **** *
 759:Generated_Source\PSoC4/Timer_1.c **** * Return:
 760:Generated_Source\PSoC4/Timer_1.c **** *  void
 761:Generated_Source\PSoC4/Timer_1.c **** *
 762:Generated_Source\PSoC4/Timer_1.c **** *******************************************************************************/
 763:Generated_Source\PSoC4/Timer_1.c **** void Timer_1_ClearFIFO(void) 
 764:Generated_Source\PSoC4/Timer_1.c **** {
 615              		.loc 1 764 0
 616              		.cfi_startproc
 617 0000 80B5     		push	{r7, lr}
 618              		.cfi_def_cfa_offset 8
 619              		.cfi_offset 7, -8
 620              		.cfi_offset 14, -4
 621 0002 00AF     		add	r7, sp, #0
 622              		.cfi_def_cfa_register 7
 765:Generated_Source\PSoC4/Timer_1.c ****     while(0u != (Timer_1_ReadStatusRegister() & Timer_1_STATUS_FIFONEMP))
 623              		.loc 1 765 0
 624 0004 01E0     		b	.L53
 625              	.L54:
 766:Generated_Source\PSoC4/Timer_1.c ****     {
 767:Generated_Source\PSoC4/Timer_1.c ****         (void)Timer_1_ReadCapture();
 626              		.loc 1 767 0
 627 0006 FFF7FEFF 		bl	Timer_1_ReadCapture
 628              	.L53:
 765:Generated_Source\PSoC4/Timer_1.c ****     while(0u != (Timer_1_ReadStatusRegister() & Timer_1_STATUS_FIFONEMP))
 629              		.loc 1 765 0
 630 000a FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 631 000e 031C     		mov	r3, r0
 632 0010 1A1C     		mov	r2, r3
 633 0012 0823     		mov	r3, #8
 634 0014 1340     		and	r3, r2
 635 0016 F6D1     		bne	.L54
 768:Generated_Source\PSoC4/Timer_1.c ****     }
 769:Generated_Source\PSoC4/Timer_1.c **** }
 636              		.loc 1 769 0
 637 0018 BD46     		mov	sp, r7
 638              		@ sp needed
 639 001a 80BD     		pop	{r7, pc}
 640              		.cfi_endproc
 641              	.LFE17:
 642              		.size	Timer_1_ClearFIFO, .-Timer_1_ClearFIFO
 643              		.text
 644              	.Letext0:
 645              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 646              		.section	.debug_info,"",%progbits
 647              	.Ldebug_info0:
 648 0000 76020000 		.4byte	0x276
 649 0004 0400     		.2byte	0x4
 650 0006 00000000 		.4byte	.Ldebug_abbrev0
 651 000a 04       		.byte	0x4
 652 000b 01       		.uleb128 0x1
 653 000c 06000000 		.4byte	.LASF38
 654 0010 01       		.byte	0x1
 655 0011 AC000000 		.4byte	.LASF39
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 26


 656 0015 C5020000 		.4byte	.LASF40
 657 0019 00000000 		.4byte	.Ldebug_ranges0+0
 658 001d 00000000 		.4byte	0
 659 0021 00000000 		.4byte	.Ldebug_line0
 660 0025 02       		.uleb128 0x2
 661 0026 01       		.byte	0x1
 662 0027 06       		.byte	0x6
 663 0028 59030000 		.4byte	.LASF0
 664 002c 02       		.uleb128 0x2
 665 002d 01       		.byte	0x1
 666 002e 08       		.byte	0x8
 667 002f 22010000 		.4byte	.LASF1
 668 0033 02       		.uleb128 0x2
 669 0034 02       		.byte	0x2
 670 0035 05       		.byte	0x5
 671 0036 BB020000 		.4byte	.LASF2
 672 003a 02       		.uleb128 0x2
 673 003b 02       		.byte	0x2
 674 003c 07       		.byte	0x7
 675 003d F4000000 		.4byte	.LASF3
 676 0041 02       		.uleb128 0x2
 677 0042 04       		.byte	0x4
 678 0043 05       		.byte	0x5
 679 0044 4B030000 		.4byte	.LASF4
 680 0048 02       		.uleb128 0x2
 681 0049 04       		.byte	0x4
 682 004a 07       		.byte	0x7
 683 004b 48010000 		.4byte	.LASF5
 684 004f 02       		.uleb128 0x2
 685 0050 08       		.byte	0x8
 686 0051 05       		.byte	0x5
 687 0052 79020000 		.4byte	.LASF6
 688 0056 02       		.uleb128 0x2
 689 0057 08       		.byte	0x8
 690 0058 07       		.byte	0x7
 691 0059 02020000 		.4byte	.LASF7
 692 005d 03       		.uleb128 0x3
 693 005e 04       		.byte	0x4
 694 005f 05       		.byte	0x5
 695 0060 696E7400 		.ascii	"int\000"
 696 0064 02       		.uleb128 0x2
 697 0065 04       		.byte	0x4
 698 0066 07       		.byte	0x7
 699 0067 07010000 		.4byte	.LASF8
 700 006b 04       		.uleb128 0x4
 701 006c 5A010000 		.4byte	.LASF9
 702 0070 02       		.byte	0x2
 703 0071 B901     		.2byte	0x1b9
 704 0073 2C000000 		.4byte	0x2c
 705 0077 04       		.uleb128 0x4
 706 0078 C4010000 		.4byte	.LASF10
 707 007c 02       		.byte	0x2
 708 007d BB01     		.2byte	0x1bb
 709 007f 48000000 		.4byte	0x48
 710 0083 02       		.uleb128 0x2
 711 0084 04       		.byte	0x4
 712 0085 04       		.byte	0x4
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 27


 713 0086 14010000 		.4byte	.LASF11
 714 008a 02       		.uleb128 0x2
 715 008b 08       		.byte	0x8
 716 008c 04       		.byte	0x4
 717 008d 77010000 		.4byte	.LASF12
 718 0091 02       		.uleb128 0x2
 719 0092 01       		.byte	0x1
 720 0093 08       		.byte	0x8
 721 0094 54030000 		.4byte	.LASF13
 722 0098 04       		.uleb128 0x4
 723 0099 30010000 		.4byte	.LASF14
 724 009d 02       		.byte	0x2
 725 009e 6302     		.2byte	0x263
 726 00a0 A4000000 		.4byte	0xa4
 727 00a4 05       		.uleb128 0x5
 728 00a5 6B000000 		.4byte	0x6b
 729 00a9 04       		.uleb128 0x4
 730 00aa 00000000 		.4byte	.LASF15
 731 00ae 02       		.byte	0x2
 732 00af 6502     		.2byte	0x265
 733 00b1 B5000000 		.4byte	0xb5
 734 00b5 05       		.uleb128 0x5
 735 00b6 77000000 		.4byte	0x77
 736 00ba 02       		.uleb128 0x2
 737 00bb 04       		.byte	0x4
 738 00bc 07       		.byte	0x7
 739 00bd 70020000 		.4byte	.LASF16
 740 00c1 06       		.uleb128 0x6
 741 00c2 F5010000 		.4byte	.LASF20
 742 00c6 01       		.byte	0x1
 743 00c7 2B       		.byte	0x2b
 744 00c8 00000000 		.4byte	.LFB2
 745 00cc 58000000 		.4byte	.LFE2-.LFB2
 746 00d0 01       		.uleb128 0x1
 747 00d1 9C       		.byte	0x9c
 748 00d2 E5000000 		.4byte	0xe5
 749 00d6 07       		.uleb128 0x7
 750 00d7 42020000 		.4byte	.LASF41
 751 00db 01       		.byte	0x1
 752 00dc 2F       		.byte	0x2f
 753 00dd 6B000000 		.4byte	0x6b
 754 00e1 02       		.uleb128 0x2
 755 00e2 91       		.byte	0x91
 756 00e3 6F       		.sleb128 -17
 757 00e4 00       		.byte	0
 758 00e5 08       		.uleb128 0x8
 759 00e6 68010000 		.4byte	.LASF17
 760 00ea 01       		.byte	0x1
 761 00eb B4       		.byte	0xb4
 762 00ec 00000000 		.4byte	.LFB3
 763 00f0 20000000 		.4byte	.LFE3-.LFB3
 764 00f4 01       		.uleb128 0x1
 765 00f5 9C       		.byte	0x9c
 766 00f6 09       		.uleb128 0x9
 767 00f7 E7010000 		.4byte	.LASF18
 768 00fb 01       		.byte	0x1
 769 00fc D7       		.byte	0xd7
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 28


 770 00fd 00000000 		.4byte	.LFB4
 771 0101 24000000 		.4byte	.LFE4-.LFB4
 772 0105 01       		.uleb128 0x1
 773 0106 9C       		.byte	0x9c
 774 0107 08       		.uleb128 0x8
 775 0108 65030000 		.4byte	.LASF19
 776 010c 01       		.byte	0x1
 777 010d F7       		.byte	0xf7
 778 010e 00000000 		.4byte	.LFB5
 779 0112 1C000000 		.4byte	.LFE5-.LFB5
 780 0116 01       		.uleb128 0x1
 781 0117 9C       		.byte	0x9c
 782 0118 0A       		.uleb128 0xa
 783 0119 7E010000 		.4byte	.LASF21
 784 011d 01       		.byte	0x1
 785 011e 1701     		.2byte	0x117
 786 0120 00000000 		.4byte	.LFB6
 787 0124 20000000 		.4byte	.LFE6-.LFB6
 788 0128 01       		.uleb128 0x1
 789 0129 9C       		.byte	0x9c
 790 012a 3E010000 		.4byte	0x13e
 791 012e 0B       		.uleb128 0xb
 792 012f 87020000 		.4byte	.LASF26
 793 0133 01       		.byte	0x1
 794 0134 1701     		.2byte	0x117
 795 0136 6B000000 		.4byte	0x6b
 796 013a 02       		.uleb128 0x2
 797 013b 91       		.byte	0x91
 798 013c 77       		.sleb128 -9
 799 013d 00       		.byte	0
 800 013e 0C       		.uleb128 0xc
 801 013f 94000000 		.4byte	.LASF22
 802 0143 01       		.byte	0x1
 803 0144 2E01     		.2byte	0x12e
 804 0146 00000000 		.4byte	.LFB7
 805 014a 10000000 		.4byte	.LFE7-.LFB7
 806 014e 01       		.uleb128 0x1
 807 014f 9C       		.byte	0x9c
 808 0150 0D       		.uleb128 0xd
 809 0151 30030000 		.4byte	.LASF23
 810 0155 01       		.byte	0x1
 811 0156 4D01     		.2byte	0x14d
 812 0158 6B000000 		.4byte	0x6b
 813 015c 00000000 		.4byte	.LFB8
 814 0160 14000000 		.4byte	.LFE8-.LFB8
 815 0164 01       		.uleb128 0x1
 816 0165 9C       		.byte	0x9c
 817 0166 0D       		.uleb128 0xd
 818 0167 CB010000 		.4byte	.LASF24
 819 016b 01       		.byte	0x1
 820 016c 6401     		.2byte	0x164
 821 016e 6B000000 		.4byte	0x6b
 822 0172 00000000 		.4byte	.LFB9
 823 0176 14000000 		.4byte	.LFE9-.LFB9
 824 017a 01       		.uleb128 0x1
 825 017b 9C       		.byte	0x9c
 826 017c 0A       		.uleb128 0xa
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 29


 827 017d A7010000 		.4byte	.LASF25
 828 0181 01       		.byte	0x1
 829 0182 7B01     		.2byte	0x17b
 830 0184 00000000 		.4byte	.LFB10
 831 0188 20000000 		.4byte	.LFE10-.LFB10
 832 018c 01       		.uleb128 0x1
 833 018d 9C       		.byte	0x9c
 834 018e A2010000 		.4byte	0x1a2
 835 0192 0B       		.uleb128 0xb
 836 0193 60010000 		.4byte	.LASF27
 837 0197 01       		.byte	0x1
 838 0198 7B01     		.2byte	0x17b
 839 019a 6B000000 		.4byte	0x6b
 840 019e 02       		.uleb128 0x2
 841 019f 91       		.byte	0x91
 842 01a0 77       		.sleb128 -9
 843 01a1 00       		.byte	0
 844 01a2 0D       		.uleb128 0xd
 845 01a3 35010000 		.4byte	.LASF28
 846 01a7 01       		.byte	0x1
 847 01a8 9501     		.2byte	0x195
 848 01aa 77000000 		.4byte	0x77
 849 01ae 00000000 		.4byte	.LFB11
 850 01b2 14000000 		.4byte	.LFE11-.LFB11
 851 01b6 01       		.uleb128 0x1
 852 01b7 9C       		.byte	0x9c
 853 01b8 0A       		.uleb128 0xa
 854 01b9 CD000000 		.4byte	.LASF29
 855 01bd 01       		.byte	0x1
 856 01be AF01     		.2byte	0x1af
 857 01c0 00000000 		.4byte	.LFB12
 858 01c4 18000000 		.4byte	.LFE12-.LFB12
 859 01c8 01       		.uleb128 0x1
 860 01c9 9C       		.byte	0x9c
 861 01ca DE010000 		.4byte	0x1de
 862 01ce 0B       		.uleb128 0xb
 863 01cf ED000000 		.4byte	.LASF30
 864 01d3 01       		.byte	0x1
 865 01d4 AF01     		.2byte	0x1af
 866 01d6 77000000 		.4byte	0x77
 867 01da 02       		.uleb128 0x2
 868 01db 91       		.byte	0x91
 869 01dc 74       		.sleb128 -12
 870 01dd 00       		.byte	0
 871 01de 0D       		.uleb128 0xd
 872 01df 2E020000 		.4byte	.LASF31
 873 01e3 01       		.byte	0x1
 874 01e4 C801     		.2byte	0x1c8
 875 01e6 77000000 		.4byte	0x77
 876 01ea 00000000 		.4byte	.LFB13
 877 01ee 14000000 		.4byte	.LFE13-.LFB13
 878 01f2 01       		.uleb128 0x1
 879 01f3 9C       		.byte	0x9c
 880 01f4 0A       		.uleb128 0xa
 881 01f5 19020000 		.4byte	.LASF32
 882 01f9 01       		.byte	0x1
 883 01fa E001     		.2byte	0x1e0
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 30


 884 01fc 00000000 		.4byte	.LFB14
 885 0200 18000000 		.4byte	.LFE14-.LFB14
 886 0204 01       		.uleb128 0x1
 887 0205 9C       		.byte	0x9c
 888 0206 1A020000 		.4byte	0x21a
 889 020a 0B       		.uleb128 0xb
 890 020b 1A010000 		.4byte	.LASF33
 891 020f 01       		.byte	0x1
 892 0210 E001     		.2byte	0x1e0
 893 0212 77000000 		.4byte	0x77
 894 0216 02       		.uleb128 0x2
 895 0217 91       		.byte	0x91
 896 0218 74       		.sleb128 -12
 897 0219 00       		.byte	0
 898 021a 0D       		.uleb128 0xd
 899 021b 95020000 		.4byte	.LASF34
 900 021f 01       		.byte	0x1
 901 0220 FC01     		.2byte	0x1fc
 902 0222 77000000 		.4byte	0x77
 903 0226 00000000 		.4byte	.LFB15
 904 022a 1C000000 		.4byte	.LFE15-.LFB15
 905 022e 01       		.uleb128 0x1
 906 022f 9C       		.byte	0x9c
 907 0230 0A       		.uleb128 0xa
 908 0231 59020000 		.4byte	.LASF35
 909 0235 01       		.byte	0x1
 910 0236 3602     		.2byte	0x236
 911 0238 00000000 		.4byte	.LFB16
 912 023c 50000000 		.4byte	.LFE16-.LFB16
 913 0240 01       		.uleb128 0x1
 914 0241 9C       		.byte	0x9c
 915 0242 56020000 		.4byte	0x256
 916 0246 0B       		.uleb128 0xb
 917 0247 E1000000 		.4byte	.LASF36
 918 024b 01       		.byte	0x1
 919 024c 3602     		.2byte	0x236
 920 024e 6B000000 		.4byte	0x6b
 921 0252 02       		.uleb128 0x2
 922 0253 91       		.byte	0x91
 923 0254 77       		.sleb128 -9
 924 0255 00       		.byte	0
 925 0256 0E       		.uleb128 0xe
 926 0257 A9020000 		.4byte	.LASF37
 927 025b 01       		.byte	0x1
 928 025c FB02     		.2byte	0x2fb
 929 025e 00000000 		.4byte	.LFB17
 930 0262 1C000000 		.4byte	.LFE17-.LFB17
 931 0266 01       		.uleb128 0x1
 932 0267 9C       		.byte	0x9c
 933 0268 0F       		.uleb128 0xf
 934 0269 97010000 		.4byte	.LASF42
 935 026d 01       		.byte	0x1
 936 026e 1A       		.byte	0x1a
 937 026f 6B000000 		.4byte	0x6b
 938 0273 05       		.uleb128 0x5
 939 0274 03       		.byte	0x3
 940 0275 00000000 		.4byte	Timer_1_initVar
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 31


 941 0279 00       		.byte	0
 942              		.section	.debug_abbrev,"",%progbits
 943              	.Ldebug_abbrev0:
 944 0000 01       		.uleb128 0x1
 945 0001 11       		.uleb128 0x11
 946 0002 01       		.byte	0x1
 947 0003 25       		.uleb128 0x25
 948 0004 0E       		.uleb128 0xe
 949 0005 13       		.uleb128 0x13
 950 0006 0B       		.uleb128 0xb
 951 0007 03       		.uleb128 0x3
 952 0008 0E       		.uleb128 0xe
 953 0009 1B       		.uleb128 0x1b
 954 000a 0E       		.uleb128 0xe
 955 000b 55       		.uleb128 0x55
 956 000c 17       		.uleb128 0x17
 957 000d 11       		.uleb128 0x11
 958 000e 01       		.uleb128 0x1
 959 000f 10       		.uleb128 0x10
 960 0010 17       		.uleb128 0x17
 961 0011 00       		.byte	0
 962 0012 00       		.byte	0
 963 0013 02       		.uleb128 0x2
 964 0014 24       		.uleb128 0x24
 965 0015 00       		.byte	0
 966 0016 0B       		.uleb128 0xb
 967 0017 0B       		.uleb128 0xb
 968 0018 3E       		.uleb128 0x3e
 969 0019 0B       		.uleb128 0xb
 970 001a 03       		.uleb128 0x3
 971 001b 0E       		.uleb128 0xe
 972 001c 00       		.byte	0
 973 001d 00       		.byte	0
 974 001e 03       		.uleb128 0x3
 975 001f 24       		.uleb128 0x24
 976 0020 00       		.byte	0
 977 0021 0B       		.uleb128 0xb
 978 0022 0B       		.uleb128 0xb
 979 0023 3E       		.uleb128 0x3e
 980 0024 0B       		.uleb128 0xb
 981 0025 03       		.uleb128 0x3
 982 0026 08       		.uleb128 0x8
 983 0027 00       		.byte	0
 984 0028 00       		.byte	0
 985 0029 04       		.uleb128 0x4
 986 002a 16       		.uleb128 0x16
 987 002b 00       		.byte	0
 988 002c 03       		.uleb128 0x3
 989 002d 0E       		.uleb128 0xe
 990 002e 3A       		.uleb128 0x3a
 991 002f 0B       		.uleb128 0xb
 992 0030 3B       		.uleb128 0x3b
 993 0031 05       		.uleb128 0x5
 994 0032 49       		.uleb128 0x49
 995 0033 13       		.uleb128 0x13
 996 0034 00       		.byte	0
 997 0035 00       		.byte	0
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 32


 998 0036 05       		.uleb128 0x5
 999 0037 35       		.uleb128 0x35
 1000 0038 00       		.byte	0
 1001 0039 49       		.uleb128 0x49
 1002 003a 13       		.uleb128 0x13
 1003 003b 00       		.byte	0
 1004 003c 00       		.byte	0
 1005 003d 06       		.uleb128 0x6
 1006 003e 2E       		.uleb128 0x2e
 1007 003f 01       		.byte	0x1
 1008 0040 3F       		.uleb128 0x3f
 1009 0041 19       		.uleb128 0x19
 1010 0042 03       		.uleb128 0x3
 1011 0043 0E       		.uleb128 0xe
 1012 0044 3A       		.uleb128 0x3a
 1013 0045 0B       		.uleb128 0xb
 1014 0046 3B       		.uleb128 0x3b
 1015 0047 0B       		.uleb128 0xb
 1016 0048 27       		.uleb128 0x27
 1017 0049 19       		.uleb128 0x19
 1018 004a 11       		.uleb128 0x11
 1019 004b 01       		.uleb128 0x1
 1020 004c 12       		.uleb128 0x12
 1021 004d 06       		.uleb128 0x6
 1022 004e 40       		.uleb128 0x40
 1023 004f 18       		.uleb128 0x18
 1024 0050 9642     		.uleb128 0x2116
 1025 0052 19       		.uleb128 0x19
 1026 0053 01       		.uleb128 0x1
 1027 0054 13       		.uleb128 0x13
 1028 0055 00       		.byte	0
 1029 0056 00       		.byte	0
 1030 0057 07       		.uleb128 0x7
 1031 0058 34       		.uleb128 0x34
 1032 0059 00       		.byte	0
 1033 005a 03       		.uleb128 0x3
 1034 005b 0E       		.uleb128 0xe
 1035 005c 3A       		.uleb128 0x3a
 1036 005d 0B       		.uleb128 0xb
 1037 005e 3B       		.uleb128 0x3b
 1038 005f 0B       		.uleb128 0xb
 1039 0060 49       		.uleb128 0x49
 1040 0061 13       		.uleb128 0x13
 1041 0062 02       		.uleb128 0x2
 1042 0063 18       		.uleb128 0x18
 1043 0064 00       		.byte	0
 1044 0065 00       		.byte	0
 1045 0066 08       		.uleb128 0x8
 1046 0067 2E       		.uleb128 0x2e
 1047 0068 00       		.byte	0
 1048 0069 3F       		.uleb128 0x3f
 1049 006a 19       		.uleb128 0x19
 1050 006b 03       		.uleb128 0x3
 1051 006c 0E       		.uleb128 0xe
 1052 006d 3A       		.uleb128 0x3a
 1053 006e 0B       		.uleb128 0xb
 1054 006f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 33


 1055 0070 0B       		.uleb128 0xb
 1056 0071 27       		.uleb128 0x27
 1057 0072 19       		.uleb128 0x19
 1058 0073 11       		.uleb128 0x11
 1059 0074 01       		.uleb128 0x1
 1060 0075 12       		.uleb128 0x12
 1061 0076 06       		.uleb128 0x6
 1062 0077 40       		.uleb128 0x40
 1063 0078 18       		.uleb128 0x18
 1064 0079 9742     		.uleb128 0x2117
 1065 007b 19       		.uleb128 0x19
 1066 007c 00       		.byte	0
 1067 007d 00       		.byte	0
 1068 007e 09       		.uleb128 0x9
 1069 007f 2E       		.uleb128 0x2e
 1070 0080 00       		.byte	0
 1071 0081 3F       		.uleb128 0x3f
 1072 0082 19       		.uleb128 0x19
 1073 0083 03       		.uleb128 0x3
 1074 0084 0E       		.uleb128 0xe
 1075 0085 3A       		.uleb128 0x3a
 1076 0086 0B       		.uleb128 0xb
 1077 0087 3B       		.uleb128 0x3b
 1078 0088 0B       		.uleb128 0xb
 1079 0089 27       		.uleb128 0x27
 1080 008a 19       		.uleb128 0x19
 1081 008b 11       		.uleb128 0x11
 1082 008c 01       		.uleb128 0x1
 1083 008d 12       		.uleb128 0x12
 1084 008e 06       		.uleb128 0x6
 1085 008f 40       		.uleb128 0x40
 1086 0090 18       		.uleb128 0x18
 1087 0091 9642     		.uleb128 0x2116
 1088 0093 19       		.uleb128 0x19
 1089 0094 00       		.byte	0
 1090 0095 00       		.byte	0
 1091 0096 0A       		.uleb128 0xa
 1092 0097 2E       		.uleb128 0x2e
 1093 0098 01       		.byte	0x1
 1094 0099 3F       		.uleb128 0x3f
 1095 009a 19       		.uleb128 0x19
 1096 009b 03       		.uleb128 0x3
 1097 009c 0E       		.uleb128 0xe
 1098 009d 3A       		.uleb128 0x3a
 1099 009e 0B       		.uleb128 0xb
 1100 009f 3B       		.uleb128 0x3b
 1101 00a0 05       		.uleb128 0x5
 1102 00a1 27       		.uleb128 0x27
 1103 00a2 19       		.uleb128 0x19
 1104 00a3 11       		.uleb128 0x11
 1105 00a4 01       		.uleb128 0x1
 1106 00a5 12       		.uleb128 0x12
 1107 00a6 06       		.uleb128 0x6
 1108 00a7 40       		.uleb128 0x40
 1109 00a8 18       		.uleb128 0x18
 1110 00a9 9742     		.uleb128 0x2117
 1111 00ab 19       		.uleb128 0x19
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 34


 1112 00ac 01       		.uleb128 0x1
 1113 00ad 13       		.uleb128 0x13
 1114 00ae 00       		.byte	0
 1115 00af 00       		.byte	0
 1116 00b0 0B       		.uleb128 0xb
 1117 00b1 05       		.uleb128 0x5
 1118 00b2 00       		.byte	0
 1119 00b3 03       		.uleb128 0x3
 1120 00b4 0E       		.uleb128 0xe
 1121 00b5 3A       		.uleb128 0x3a
 1122 00b6 0B       		.uleb128 0xb
 1123 00b7 3B       		.uleb128 0x3b
 1124 00b8 05       		.uleb128 0x5
 1125 00b9 49       		.uleb128 0x49
 1126 00ba 13       		.uleb128 0x13
 1127 00bb 02       		.uleb128 0x2
 1128 00bc 18       		.uleb128 0x18
 1129 00bd 00       		.byte	0
 1130 00be 00       		.byte	0
 1131 00bf 0C       		.uleb128 0xc
 1132 00c0 2E       		.uleb128 0x2e
 1133 00c1 00       		.byte	0
 1134 00c2 3F       		.uleb128 0x3f
 1135 00c3 19       		.uleb128 0x19
 1136 00c4 03       		.uleb128 0x3
 1137 00c5 0E       		.uleb128 0xe
 1138 00c6 3A       		.uleb128 0x3a
 1139 00c7 0B       		.uleb128 0xb
 1140 00c8 3B       		.uleb128 0x3b
 1141 00c9 05       		.uleb128 0x5
 1142 00ca 27       		.uleb128 0x27
 1143 00cb 19       		.uleb128 0x19
 1144 00cc 11       		.uleb128 0x11
 1145 00cd 01       		.uleb128 0x1
 1146 00ce 12       		.uleb128 0x12
 1147 00cf 06       		.uleb128 0x6
 1148 00d0 40       		.uleb128 0x40
 1149 00d1 18       		.uleb128 0x18
 1150 00d2 9742     		.uleb128 0x2117
 1151 00d4 19       		.uleb128 0x19
 1152 00d5 00       		.byte	0
 1153 00d6 00       		.byte	0
 1154 00d7 0D       		.uleb128 0xd
 1155 00d8 2E       		.uleb128 0x2e
 1156 00d9 00       		.byte	0
 1157 00da 3F       		.uleb128 0x3f
 1158 00db 19       		.uleb128 0x19
 1159 00dc 03       		.uleb128 0x3
 1160 00dd 0E       		.uleb128 0xe
 1161 00de 3A       		.uleb128 0x3a
 1162 00df 0B       		.uleb128 0xb
 1163 00e0 3B       		.uleb128 0x3b
 1164 00e1 05       		.uleb128 0x5
 1165 00e2 27       		.uleb128 0x27
 1166 00e3 19       		.uleb128 0x19
 1167 00e4 49       		.uleb128 0x49
 1168 00e5 13       		.uleb128 0x13
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 35


 1169 00e6 11       		.uleb128 0x11
 1170 00e7 01       		.uleb128 0x1
 1171 00e8 12       		.uleb128 0x12
 1172 00e9 06       		.uleb128 0x6
 1173 00ea 40       		.uleb128 0x40
 1174 00eb 18       		.uleb128 0x18
 1175 00ec 9742     		.uleb128 0x2117
 1176 00ee 19       		.uleb128 0x19
 1177 00ef 00       		.byte	0
 1178 00f0 00       		.byte	0
 1179 00f1 0E       		.uleb128 0xe
 1180 00f2 2E       		.uleb128 0x2e
 1181 00f3 00       		.byte	0
 1182 00f4 3F       		.uleb128 0x3f
 1183 00f5 19       		.uleb128 0x19
 1184 00f6 03       		.uleb128 0x3
 1185 00f7 0E       		.uleb128 0xe
 1186 00f8 3A       		.uleb128 0x3a
 1187 00f9 0B       		.uleb128 0xb
 1188 00fa 3B       		.uleb128 0x3b
 1189 00fb 05       		.uleb128 0x5
 1190 00fc 27       		.uleb128 0x27
 1191 00fd 19       		.uleb128 0x19
 1192 00fe 11       		.uleb128 0x11
 1193 00ff 01       		.uleb128 0x1
 1194 0100 12       		.uleb128 0x12
 1195 0101 06       		.uleb128 0x6
 1196 0102 40       		.uleb128 0x40
 1197 0103 18       		.uleb128 0x18
 1198 0104 9642     		.uleb128 0x2116
 1199 0106 19       		.uleb128 0x19
 1200 0107 00       		.byte	0
 1201 0108 00       		.byte	0
 1202 0109 0F       		.uleb128 0xf
 1203 010a 34       		.uleb128 0x34
 1204 010b 00       		.byte	0
 1205 010c 03       		.uleb128 0x3
 1206 010d 0E       		.uleb128 0xe
 1207 010e 3A       		.uleb128 0x3a
 1208 010f 0B       		.uleb128 0xb
 1209 0110 3B       		.uleb128 0x3b
 1210 0111 0B       		.uleb128 0xb
 1211 0112 49       		.uleb128 0x49
 1212 0113 13       		.uleb128 0x13
 1213 0114 3F       		.uleb128 0x3f
 1214 0115 19       		.uleb128 0x19
 1215 0116 02       		.uleb128 0x2
 1216 0117 18       		.uleb128 0x18
 1217 0118 00       		.byte	0
 1218 0119 00       		.byte	0
 1219 011a 00       		.byte	0
 1220              		.section	.debug_aranges,"",%progbits
 1221 0000 94000000 		.4byte	0x94
 1222 0004 0200     		.2byte	0x2
 1223 0006 00000000 		.4byte	.Ldebug_info0
 1224 000a 04       		.byte	0x4
 1225 000b 00       		.byte	0
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 36


 1226 000c 0000     		.2byte	0
 1227 000e 0000     		.2byte	0
 1228 0010 00000000 		.4byte	.LFB2
 1229 0014 58000000 		.4byte	.LFE2-.LFB2
 1230 0018 00000000 		.4byte	.LFB3
 1231 001c 20000000 		.4byte	.LFE3-.LFB3
 1232 0020 00000000 		.4byte	.LFB4
 1233 0024 24000000 		.4byte	.LFE4-.LFB4
 1234 0028 00000000 		.4byte	.LFB5
 1235 002c 1C000000 		.4byte	.LFE5-.LFB5
 1236 0030 00000000 		.4byte	.LFB6
 1237 0034 20000000 		.4byte	.LFE6-.LFB6
 1238 0038 00000000 		.4byte	.LFB7
 1239 003c 10000000 		.4byte	.LFE7-.LFB7
 1240 0040 00000000 		.4byte	.LFB8
 1241 0044 14000000 		.4byte	.LFE8-.LFB8
 1242 0048 00000000 		.4byte	.LFB9
 1243 004c 14000000 		.4byte	.LFE9-.LFB9
 1244 0050 00000000 		.4byte	.LFB10
 1245 0054 20000000 		.4byte	.LFE10-.LFB10
 1246 0058 00000000 		.4byte	.LFB11
 1247 005c 14000000 		.4byte	.LFE11-.LFB11
 1248 0060 00000000 		.4byte	.LFB12
 1249 0064 18000000 		.4byte	.LFE12-.LFB12
 1250 0068 00000000 		.4byte	.LFB13
 1251 006c 14000000 		.4byte	.LFE13-.LFB13
 1252 0070 00000000 		.4byte	.LFB14
 1253 0074 18000000 		.4byte	.LFE14-.LFB14
 1254 0078 00000000 		.4byte	.LFB15
 1255 007c 1C000000 		.4byte	.LFE15-.LFB15
 1256 0080 00000000 		.4byte	.LFB16
 1257 0084 50000000 		.4byte	.LFE16-.LFB16
 1258 0088 00000000 		.4byte	.LFB17
 1259 008c 1C000000 		.4byte	.LFE17-.LFB17
 1260 0090 00000000 		.4byte	0
 1261 0094 00000000 		.4byte	0
 1262              		.section	.debug_ranges,"",%progbits
 1263              	.Ldebug_ranges0:
 1264 0000 00000000 		.4byte	.LFB2
 1265 0004 58000000 		.4byte	.LFE2
 1266 0008 00000000 		.4byte	.LFB3
 1267 000c 20000000 		.4byte	.LFE3
 1268 0010 00000000 		.4byte	.LFB4
 1269 0014 24000000 		.4byte	.LFE4
 1270 0018 00000000 		.4byte	.LFB5
 1271 001c 1C000000 		.4byte	.LFE5
 1272 0020 00000000 		.4byte	.LFB6
 1273 0024 20000000 		.4byte	.LFE6
 1274 0028 00000000 		.4byte	.LFB7
 1275 002c 10000000 		.4byte	.LFE7
 1276 0030 00000000 		.4byte	.LFB8
 1277 0034 14000000 		.4byte	.LFE8
 1278 0038 00000000 		.4byte	.LFB9
 1279 003c 14000000 		.4byte	.LFE9
 1280 0040 00000000 		.4byte	.LFB10
 1281 0044 20000000 		.4byte	.LFE10
 1282 0048 00000000 		.4byte	.LFB11
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 37


 1283 004c 14000000 		.4byte	.LFE11
 1284 0050 00000000 		.4byte	.LFB12
 1285 0054 18000000 		.4byte	.LFE12
 1286 0058 00000000 		.4byte	.LFB13
 1287 005c 14000000 		.4byte	.LFE13
 1288 0060 00000000 		.4byte	.LFB14
 1289 0064 18000000 		.4byte	.LFE14
 1290 0068 00000000 		.4byte	.LFB15
 1291 006c 1C000000 		.4byte	.LFE15
 1292 0070 00000000 		.4byte	.LFB16
 1293 0074 50000000 		.4byte	.LFE16
 1294 0078 00000000 		.4byte	.LFB17
 1295 007c 1C000000 		.4byte	.LFE17
 1296 0080 00000000 		.4byte	0
 1297 0084 00000000 		.4byte	0
 1298              		.section	.debug_line,"",%progbits
 1299              	.Ldebug_line0:
 1300 0000 84010000 		.section	.debug_str,"MS",%progbits,1
 1300      02004400 
 1300      00000201 
 1300      FB0E0D00 
 1300      01010101 
 1301              	.LASF15:
 1302 0000 72656733 		.ascii	"reg32\000"
 1302      3200
 1303              	.LASF38:
 1304 0006 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1304      4320342E 
 1304      392E3320 
 1304      32303135 
 1304      30333033 
 1305 0039 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1305      20726576 
 1305      6973696F 
 1305      6E203232 
 1305      31323230 
 1306 006c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1306      66756E63 
 1306      74696F6E 
 1306      2D736563 
 1306      74696F6E 
 1307              	.LASF22:
 1308 0094 54696D65 		.ascii	"Timer_1_SoftwareCapture\000"
 1308      725F315F 
 1308      536F6674 
 1308      77617265 
 1308      43617074 
 1309              	.LASF39:
 1310 00ac 47656E65 		.ascii	"Generated_Source\\PSoC4\\Timer_1.c\000"
 1310      72617465 
 1310      645F536F 
 1310      75726365 
 1310      5C50536F 
 1311              	.LASF29:
 1312 00cd 54696D65 		.ascii	"Timer_1_WritePeriod\000"
 1312      725F315F 
 1312      57726974 
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 38


 1312      65506572 
 1312      696F6400 
 1313              	.LASF36:
 1314 00e1 63617074 		.ascii	"captureMode\000"
 1314      7572654D 
 1314      6F646500 
 1315              	.LASF30:
 1316 00ed 70657269 		.ascii	"period\000"
 1316      6F6400
 1317              	.LASF3:
 1318 00f4 73686F72 		.ascii	"short unsigned int\000"
 1318      7420756E 
 1318      7369676E 
 1318      65642069 
 1318      6E7400
 1319              	.LASF8:
 1320 0107 756E7369 		.ascii	"unsigned int\000"
 1320      676E6564 
 1320      20696E74 
 1320      00
 1321              	.LASF11:
 1322 0114 666C6F61 		.ascii	"float\000"
 1322      7400
 1323              	.LASF33:
 1324 011a 636F756E 		.ascii	"counter\000"
 1324      74657200 
 1325              	.LASF1:
 1326 0122 756E7369 		.ascii	"unsigned char\000"
 1326      676E6564 
 1326      20636861 
 1326      7200
 1327              	.LASF14:
 1328 0130 72656738 		.ascii	"reg8\000"
 1328      00
 1329              	.LASF28:
 1330 0135 54696D65 		.ascii	"Timer_1_ReadPeriod\000"
 1330      725F315F 
 1330      52656164 
 1330      50657269 
 1330      6F6400
 1331              	.LASF5:
 1332 0148 6C6F6E67 		.ascii	"long unsigned int\000"
 1332      20756E73 
 1332      69676E65 
 1332      6420696E 
 1332      7400
 1333              	.LASF9:
 1334 015a 75696E74 		.ascii	"uint8\000"
 1334      3800
 1335              	.LASF27:
 1336 0160 636F6E74 		.ascii	"control\000"
 1336      726F6C00 
 1337              	.LASF17:
 1338 0168 54696D65 		.ascii	"Timer_1_Enable\000"
 1338      725F315F 
 1338      456E6162 
 1338      6C6500
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 39


 1339              	.LASF12:
 1340 0177 646F7562 		.ascii	"double\000"
 1340      6C6500
 1341              	.LASF21:
 1342 017e 54696D65 		.ascii	"Timer_1_SetInterruptMode\000"
 1342      725F315F 
 1342      53657449 
 1342      6E746572 
 1342      72757074 
 1343              	.LASF42:
 1344 0197 54696D65 		.ascii	"Timer_1_initVar\000"
 1344      725F315F 
 1344      696E6974 
 1344      56617200 
 1345              	.LASF25:
 1346 01a7 54696D65 		.ascii	"Timer_1_WriteControlRegister\000"
 1346      725F315F 
 1346      57726974 
 1346      65436F6E 
 1346      74726F6C 
 1347              	.LASF10:
 1348 01c4 75696E74 		.ascii	"uint32\000"
 1348      333200
 1349              	.LASF24:
 1350 01cb 54696D65 		.ascii	"Timer_1_ReadControlRegister\000"
 1350      725F315F 
 1350      52656164 
 1350      436F6E74 
 1350      726F6C52 
 1351              	.LASF18:
 1352 01e7 54696D65 		.ascii	"Timer_1_Start\000"
 1352      725F315F 
 1352      53746172 
 1352      7400
 1353              	.LASF20:
 1354 01f5 54696D65 		.ascii	"Timer_1_Init\000"
 1354      725F315F 
 1354      496E6974 
 1354      00
 1355              	.LASF7:
 1356 0202 6C6F6E67 		.ascii	"long long unsigned int\000"
 1356      206C6F6E 
 1356      6720756E 
 1356      7369676E 
 1356      65642069 
 1357              	.LASF32:
 1358 0219 54696D65 		.ascii	"Timer_1_WriteCounter\000"
 1358      725F315F 
 1358      57726974 
 1358      65436F75 
 1358      6E746572 
 1359              	.LASF31:
 1360 022e 54696D65 		.ascii	"Timer_1_ReadCapture\000"
 1360      725F315F 
 1360      52656164 
 1360      43617074 
 1360      75726500 
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 40


 1361              	.LASF41:
 1362 0242 54696D65 		.ascii	"Timer_1_interruptState\000"
 1362      725F315F 
 1362      696E7465 
 1362      72727570 
 1362      74537461 
 1363              	.LASF35:
 1364 0259 54696D65 		.ascii	"Timer_1_SetCaptureMode\000"
 1364      725F315F 
 1364      53657443 
 1364      61707475 
 1364      72654D6F 
 1365              	.LASF16:
 1366 0270 73697A65 		.ascii	"sizetype\000"
 1366      74797065 
 1366      00
 1367              	.LASF6:
 1368 0279 6C6F6E67 		.ascii	"long long int\000"
 1368      206C6F6E 
 1368      6720696E 
 1368      7400
 1369              	.LASF26:
 1370 0287 696E7465 		.ascii	"interruptMode\000"
 1370      72727570 
 1370      744D6F64 
 1370      6500
 1371              	.LASF34:
 1372 0295 54696D65 		.ascii	"Timer_1_ReadCounter\000"
 1372      725F315F 
 1372      52656164 
 1372      436F756E 
 1372      74657200 
 1373              	.LASF37:
 1374 02a9 54696D65 		.ascii	"Timer_1_ClearFIFO\000"
 1374      725F315F 
 1374      436C6561 
 1374      72464946 
 1374      4F00
 1375              	.LASF2:
 1376 02bb 73686F72 		.ascii	"short int\000"
 1376      7420696E 
 1376      7400
 1377              	.LASF40:
 1378 02c5 433A5C55 		.ascii	"C:\\Users\\Andrew Joseph\\Desktop\\Senior Design\\t"
 1378      73657273 
 1378      5C416E64 
 1378      72657720 
 1378      4A6F7365 
 1379 02f3 72756E6B 		.ascii	"runk\\src\\PSoC_Core\\fNIR PSoC Central\\fNIR PSoC "
 1379      5C737263 
 1379      5C50536F 
 1379      435F436F 
 1379      72655C66 
 1380 0322 43656E74 		.ascii	"Central.cydsn\000"
 1380      72616C2E 
 1380      63796473 
 1380      6E00
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cc1f6rSe.s 			page 41


 1381              	.LASF23:
 1382 0330 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 1382      725F315F 
 1382      52656164 
 1382      53746174 
 1382      75735265 
 1383              	.LASF4:
 1384 034b 6C6F6E67 		.ascii	"long int\000"
 1384      20696E74 
 1384      00
 1385              	.LASF13:
 1386 0354 63686172 		.ascii	"char\000"
 1386      00
 1387              	.LASF0:
 1388 0359 7369676E 		.ascii	"signed char\000"
 1388      65642063 
 1388      68617200 
 1389              	.LASF19:
 1390 0365 54696D65 		.ascii	"Timer_1_Stop\000"
 1390      725F315F 
 1390      53746F70 
 1390      00
 1391              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
