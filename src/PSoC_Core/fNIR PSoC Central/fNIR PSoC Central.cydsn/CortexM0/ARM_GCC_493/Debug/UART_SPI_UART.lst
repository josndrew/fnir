ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.comm	UART_rxBufferHead,4,4
  18              		.comm	UART_rxBufferTail,4,4
  19              		.comm	UART_rxBufferOverflow,1,1
  20              		.comm	UART_txBufferHead,4,4
  21              		.comm	UART_txBufferTail,4,4
  22              		.comm	UART_rxBufferInternal,2049,4
  23              		.comm	UART_txBufferInternal,2048,4
  24              		.section	.text.UART_SpiUartReadRxData,"ax",%progbits
  25              		.align	2
  26              		.global	UART_SpiUartReadRxData
  27              		.code	16
  28              		.thumb_func
  29              		.type	UART_SpiUartReadRxData, %function
  30              	UART_SpiUartReadRxData:
  31              	.LFB2:
  32              		.file 1 "Generated_Source\\PSoC4\\UART_SPI_UART.c"
   1:Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_SPI_UART.c **** * \file UART_SPI_UART.c
   3:Generated_Source\PSoC4/UART_SPI_UART.c **** * \version 3.20
   4:Generated_Source\PSoC4/UART_SPI_UART.c **** *
   5:Generated_Source\PSoC4/UART_SPI_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_SPI_UART.c **** *  SPI and UART modes.
   8:Generated_Source\PSoC4/UART_SPI_UART.c **** *
   9:Generated_Source\PSoC4/UART_SPI_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_SPI_UART.c **** *
  11:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_SPI_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_SPI_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_SPI_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  19:Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_PVT.h"
  20:Generated_Source\PSoC4/UART_SPI_UART.c **** #include "UART_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  22:Generated_Source\PSoC4/UART_SPI_UART.c **** /***************************************
  23:Generated_Source\PSoC4/UART_SPI_UART.c **** *        SPI/UART Private Vars
  24:Generated_Source\PSoC4/UART_SPI_UART.c **** ***************************************/
  25:Generated_Source\PSoC4/UART_SPI_UART.c **** 
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 2


  26:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER_CONST)
  27:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to put data into the software receive buffer.*/
  28:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferHead;
  29:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to get data from the software receive buffer.*/
  30:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_rxBufferTail;
  31:Generated_Source\PSoC4/UART_SPI_UART.c ****     /**
  32:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \addtogroup group_globals
  33:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \{
  34:Generated_Source\PSoC4/UART_SPI_UART.c ****     */
  35:Generated_Source\PSoC4/UART_SPI_UART.c ****     /** Sets when internal software receive buffer overflow
  36:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  was occurred.
  37:Generated_Source\PSoC4/UART_SPI_UART.c ****     */
  38:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8  UART_rxBufferOverflow;
  39:Generated_Source\PSoC4/UART_SPI_UART.c ****     /** \} globals */
  40:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  41:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  42:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER_CONST)
  43:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to put data into the software transmit buffer.*/
  44:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferHead;
  45:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Start index to get data from the software transmit buffer.*/
  46:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint32 UART_txBufferTail;
  47:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
  48:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  49:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_RX_SW_BUFFER)
  50:Generated_Source\PSoC4/UART_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  51:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_rxBufferInternal[UART_INTERNAL_RX_BUFFER_SIZE];
  52:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_RX_SW_BUFFER) */
  53:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  54:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_INTERNAL_TX_SW_BUFFER)
  55:Generated_Source\PSoC4/UART_SPI_UART.c ****     volatile uint8 UART_txBufferInternal[UART_TX_BUFFER_SIZE];
  56:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_INTERNAL_TX_SW_BUFFER) */
  57:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  58:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  59:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_RX_DIRECTION)
  60:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
  61:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartReadRxData
  62:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
  63:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  64:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  65:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  66:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  67:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  68:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  69:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     is empty.
  70:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  71:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
  72:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Next data element from the receive buffer. 
  73:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  The amount of data bits to be received depends on RX data bits selection 
  74:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  (the data bit counting starts from LSB of return value).
  75:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  76:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
  77:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
  78:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
  79:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
  80:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
  81:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
  82:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 3


  83:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartReadRxData(void)
  84:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
  33              		.loc 1 84 0
  34              		.cfi_startproc
  35 0000 80B5     		push	{r7, lr}
  36              		.cfi_def_cfa_offset 8
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 82B0     		sub	sp, sp, #8
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  85:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 rxData = 0u;
  43              		.loc 1 85 0
  44 0006 0023     		mov	r3, #0
  45 0008 7B60     		str	r3, [r7, #4]
  86:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  87:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
  88:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
  89:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
  90:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  91:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
  92:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
  93:Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_rxBufferHead != UART_rxBufferTail)
  46              		.loc 1 93 0
  47 000a 0F4B     		ldr	r3, .L5
  48 000c 1A68     		ldr	r2, [r3]
  49 000e 0F4B     		ldr	r3, .L5+4
  50 0010 1B68     		ldr	r3, [r3]
  51 0012 9A42     		cmp	r2, r3
  52 0014 12D0     		beq	.L2
  94:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
  95:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* There is data in RX software buffer */
  96:Generated_Source\PSoC4/UART_SPI_UART.c **** 
  97:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Calculate index to read from */
  98:Generated_Source\PSoC4/UART_SPI_UART.c ****                 locTail = (UART_rxBufferTail + 1u);
  53              		.loc 1 98 0
  54 0016 0D4B     		ldr	r3, .L5+4
  55 0018 1B68     		ldr	r3, [r3]
  56 001a 0133     		add	r3, r3, #1
  57 001c 3B60     		str	r3, [r7]
  99:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 100:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_INTERNAL_RX_BUFFER_SIZE == locTail)
  58              		.loc 1 100 0
  59 001e 3B68     		ldr	r3, [r7]
  60 0020 0B4A     		ldr	r2, .L5+8
  61 0022 9342     		cmp	r3, r2
  62 0024 01D1     		bne	.L3
 101:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 102:Generated_Source\PSoC4/UART_SPI_UART.c ****                     locTail = 0u;
  63              		.loc 1 102 0
  64 0026 0023     		mov	r3, #0
  65 0028 3B60     		str	r3, [r7]
  66              	.L3:
 103:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 104:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 105:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Get data from RX software buffer */
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 4


 106:Generated_Source\PSoC4/UART_SPI_UART.c ****                 rxData = UART_GetWordFromRxBuffer(locTail);
  67              		.loc 1 106 0
  68 002a 0A4A     		ldr	r2, .L5+12
  69 002c 3B68     		ldr	r3, [r7]
  70 002e D318     		add	r3, r2, r3
  71 0030 1B78     		ldrb	r3, [r3]
  72 0032 DBB2     		uxtb	r3, r3
  73 0034 7B60     		str	r3, [r7, #4]
 107:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 108:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Change index in the buffer */
 109:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_rxBufferTail = locTail;
  74              		.loc 1 109 0
  75 0036 054B     		ldr	r3, .L5+4
  76 0038 3A68     		ldr	r2, [r7]
  77 003a 1A60     		str	r2, [r3]
  78              	.L2:
 110:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 111:Generated_Source\PSoC4/UART_SPI_UART.c ****                 #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 112:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 113:Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 114:Generated_Source\PSoC4/UART_SPI_UART.c ****                     if (0u == (UART_INTR_RX_MASK_REG & UART_INTR_RX_NOT_EMPTY))
 115:Generated_Source\PSoC4/UART_SPI_UART.c ****                     {
 116:Generated_Source\PSoC4/UART_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 117:Generated_Source\PSoC4/UART_SPI_UART.c ****                         * receiving data into software buffer.
 118:Generated_Source\PSoC4/UART_SPI_UART.c ****                         */
 119:Generated_Source\PSoC4/UART_SPI_UART.c ****                         UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 120:Generated_Source\PSoC4/UART_SPI_UART.c ****                     }
 121:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 122:Generated_Source\PSoC4/UART_SPI_UART.c ****                 #endif
 123:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 124:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 125:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 126:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 127:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 128:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Read data from RX FIFO */
 129:Generated_Source\PSoC4/UART_SPI_UART.c ****             rxData = UART_RX_FIFO_RD_REG;
 130:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 131:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 132:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 133:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (rxData);
  79              		.loc 1 133 0
  80 003c 7B68     		ldr	r3, [r7, #4]
 134:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
  81              		.loc 1 134 0
  82 003e 181C     		mov	r0, r3
  83 0040 BD46     		mov	sp, r7
  84 0042 02B0     		add	sp, sp, #8
  85              		@ sp needed
  86 0044 80BD     		pop	{r7, pc}
  87              	.L6:
  88 0046 C046     		.align	2
  89              	.L5:
  90 0048 00000000 		.word	UART_rxBufferHead
  91 004c 00000000 		.word	UART_rxBufferTail
  92 0050 01080000 		.word	2049
  93 0054 00000000 		.word	UART_rxBufferInternal
  94              		.cfi_endproc
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 5


  95              	.LFE2:
  96              		.size	UART_SpiUartReadRxData, .-UART_SpiUartReadRxData
  97              		.section	.text.UART_SpiUartGetRxBufferSize,"ax",%progbits
  98              		.align	2
  99              		.global	UART_SpiUartGetRxBufferSize
 100              		.code	16
 101              		.thumb_func
 102              		.type	UART_SpiUartGetRxBufferSize, %function
 103              	UART_SpiUartGetRxBufferSize:
 104              	.LFB3:
 135:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 136:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 137:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 138:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetRxBufferSize
 139:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 140:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 141:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 142:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 143:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     RX FIFO.
 144:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 145:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 146:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 147:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
 148:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of received data elements.
 149:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 150:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 151:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
 152:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 153:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
 154:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 155:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 156:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 157:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetRxBufferSize(void)
 158:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 105              		.loc 1 158 0
 106              		.cfi_startproc
 107 0000 80B5     		push	{r7, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 7, -8
 110              		.cfi_offset 14, -4
 111 0002 82B0     		sub	sp, sp, #8
 112              		.cfi_def_cfa_offset 16
 113 0004 00AF     		add	r7, sp, #0
 114              		.cfi_def_cfa_register 7
 159:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 160:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_RX_SW_BUFFER_CONST)
 161:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 162:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_RX_SW_BUFFER_CONST) */
 163:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 164:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 165:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 166:Generated_Source\PSoC4/UART_SPI_UART.c ****             locHead = UART_rxBufferHead;
 115              		.loc 1 166 0
 116 0006 0D4B     		ldr	r3, .L11
 117 0008 1B68     		ldr	r3, [r3]
 118 000a 3B60     		str	r3, [r7]
 167:Generated_Source\PSoC4/UART_SPI_UART.c **** 
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 6


 168:Generated_Source\PSoC4/UART_SPI_UART.c ****             if(locHead >= UART_rxBufferTail)
 119              		.loc 1 168 0
 120 000c 0C4B     		ldr	r3, .L11+4
 121 000e 1B68     		ldr	r3, [r3]
 122 0010 3A68     		ldr	r2, [r7]
 123 0012 9A42     		cmp	r2, r3
 124 0014 05D3     		bcc	.L8
 169:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 170:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead - UART_rxBufferTail);
 125              		.loc 1 170 0
 126 0016 0A4B     		ldr	r3, .L11+4
 127 0018 1B68     		ldr	r3, [r3]
 128 001a 3A68     		ldr	r2, [r7]
 129 001c D31A     		sub	r3, r2, r3
 130 001e 7B60     		str	r3, [r7, #4]
 131 0020 07E0     		b	.L9
 132              	.L8:
 171:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 172:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 173:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 174:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (locHead + (UART_INTERNAL_RX_BUFFER_SIZE - UART_rxBufferTail));
 133              		.loc 1 174 0
 134 0022 074B     		ldr	r3, .L11+4
 135 0024 1B68     		ldr	r3, [r3]
 136 0026 3A68     		ldr	r2, [r7]
 137 0028 D31A     		sub	r3, r2, r3
 138 002a 064A     		ldr	r2, .L11+8
 139 002c 9446     		mov	ip, r2
 140 002e 6344     		add	r3, r3, ip
 141 0030 7B60     		str	r3, [r7, #4]
 142              	.L9:
 175:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 176:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 177:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 178:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 179:Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_RX_FIFO_ENTRIES;
 180:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 181:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 182:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 183:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 143              		.loc 1 183 0
 144 0032 7B68     		ldr	r3, [r7, #4]
 184:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 145              		.loc 1 184 0
 146 0034 181C     		mov	r0, r3
 147 0036 BD46     		mov	sp, r7
 148 0038 02B0     		add	sp, sp, #8
 149              		@ sp needed
 150 003a 80BD     		pop	{r7, pc}
 151              	.L12:
 152              		.align	2
 153              	.L11:
 154 003c 00000000 		.word	UART_rxBufferHead
 155 0040 00000000 		.word	UART_rxBufferTail
 156 0044 01080000 		.word	2049
 157              		.cfi_endproc
 158              	.LFE3:
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 7


 159              		.size	UART_SpiUartGetRxBufferSize, .-UART_SpiUartGetRxBufferSize
 160              		.section	.text.UART_SpiUartClearRxBuffer,"ax",%progbits
 161              		.align	2
 162              		.global	UART_SpiUartClearRxBuffer
 163              		.code	16
 164              		.thumb_func
 165              		.type	UART_SpiUartClearRxBuffer, %function
 166              	UART_SpiUartClearRxBuffer:
 167              	.LFB4:
 185:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 186:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 187:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 188:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearRxBuffer
 189:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 190:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 191:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 192:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 193:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 194:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferHead - the start index to put data into the 
 195:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 196:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_rxBufferTail - the start index to get data from the 
 197:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software receive buffer.
 198:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 199:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 200:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearRxBuffer(void)
 201:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 168              		.loc 1 201 0
 169              		.cfi_startproc
 170 0000 80B5     		push	{r7, lr}
 171              		.cfi_def_cfa_offset 8
 172              		.cfi_offset 7, -8
 173              		.cfi_offset 14, -4
 174 0002 00AF     		add	r7, sp, #0
 175              		.cfi_def_cfa_register 7
 202:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_RX_SW_BUFFER)
 203:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 204:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 205:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 176              		.loc 1 205 0
 177 0004 0920     		mov	r0, #9
 178 0006 FFF7FEFF 		bl	CyIntDisable
 206:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 207:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush RX software buffer */
 208:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferHead = UART_rxBufferTail;
 179              		.loc 1 208 0
 180 000a 0E4B     		ldr	r3, .L14
 181 000c 1A68     		ldr	r2, [r3]
 182 000e 0E4B     		ldr	r3, .L14+4
 183 0010 1A60     		str	r2, [r3]
 209:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_rxBufferOverflow = 0u;
 184              		.loc 1 209 0
 185 0012 0E4B     		ldr	r3, .L14+8
 186 0014 0022     		mov	r2, #0
 187 0016 1A70     		strb	r2, [r3]
 210:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 211:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 188              		.loc 1 211 0
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 8


 189 0018 0D4B     		ldr	r3, .L14+12
 190 001a 0D4A     		ldr	r2, .L14+12
 191 001c 1268     		ldr	r2, [r2]
 192 001e 8021     		mov	r1, #128
 193 0020 4902     		lsl	r1, r1, #9
 194 0022 0A43     		orr	r2, r1
 195 0024 1A60     		str	r2, [r3]
 196 0026 0A4B     		ldr	r3, .L14+12
 197 0028 094A     		ldr	r2, .L14+12
 198 002a 1268     		ldr	r2, [r2]
 199 002c 0949     		ldr	r1, .L14+16
 200 002e 0A40     		and	r2, r1
 201 0030 1A60     		str	r2, [r3]
 212:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearRxInterruptSource(UART_INTR_RX_ALL);
 202              		.loc 1 212 0
 203 0032 094B     		ldr	r3, .L14+20
 204 0034 094A     		ldr	r2, .L14+24
 205 0036 1A60     		str	r2, [r3]
 213:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 214:Generated_Source\PSoC4/UART_SPI_UART.c ****             #if (UART_CHECK_UART_RTS_CONTROL_FLOW)
 215:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 216:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 217:Generated_Source\PSoC4/UART_SPI_UART.c ****                 * data into software buffer.
 218:Generated_Source\PSoC4/UART_SPI_UART.c ****                 */
 219:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_INTR_RX_MASK_REG |= UART_INTR_RX_NOT_EMPTY;
 220:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 221:Generated_Source\PSoC4/UART_SPI_UART.c ****             #endif
 222:Generated_Source\PSoC4/UART_SPI_UART.c ****             
 223:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 224:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 206              		.loc 1 224 0
 207 0038 0920     		mov	r0, #9
 208 003a FFF7FEFF 		bl	CyIntEnable
 225:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 226:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 227:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 228:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_RX_FIFO;
 229:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 230:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 231:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 209              		.loc 1 231 0
 210 003e BD46     		mov	sp, r7
 211              		@ sp needed
 212 0040 80BD     		pop	{r7, pc}
 213              	.L15:
 214 0042 C046     		.align	2
 215              	.L14:
 216 0044 00000000 		.word	UART_rxBufferTail
 217 0048 00000000 		.word	UART_rxBufferHead
 218 004c 00000000 		.word	UART_rxBufferOverflow
 219 0050 04032440 		.word	1076101892
 220 0054 FFFFFEFF 		.word	-65537
 221 0058 C00F2440 		.word	1076105152
 222 005c ED0F0000 		.word	4077
 223              		.cfi_endproc
 224              	.LFE4:
 225              		.size	UART_SpiUartClearRxBuffer, .-UART_SpiUartClearRxBuffer
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 9


 226              		.section	.text.UART_SpiUartWriteTxData,"ax",%progbits
 227              		.align	2
 228              		.global	UART_SpiUartWriteTxData
 229              		.code	16
 230              		.thumb_func
 231              		.type	UART_SpiUartWriteTxData, %function
 232              	UART_SpiUartWriteTxData:
 233              	.LFB5:
 232:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 233:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_RX_DIRECTION) */
 234:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 235:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 236:Generated_Source\PSoC4/UART_SPI_UART.c **** #if(UART_TX_DIRECTION)
 237:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 238:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartWriteTxData
 239:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 240:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 241:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 242:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  bus time.
 243:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 244:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  requested data in the transmit buffer.
 245:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 246:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  \param txDataByte: the data to be transmitted.
 247:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   The amount of data bits to be transmitted depends on TX data bits selection 
 248:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   (the data bit counting starts from LSB of txDataByte).
 249:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 250:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 251:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 252:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 253:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 254:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 255:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 256:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 257:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartWriteTxData(uint32 txData)
 258:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 234              		.loc 1 258 0
 235              		.cfi_startproc
 236 0000 80B5     		push	{r7, lr}
 237              		.cfi_def_cfa_offset 8
 238              		.cfi_offset 7, -8
 239              		.cfi_offset 14, -4
 240 0002 84B0     		sub	sp, sp, #16
 241              		.cfi_def_cfa_offset 24
 242 0004 00AF     		add	r7, sp, #0
 243              		.cfi_def_cfa_register 7
 244 0006 7860     		str	r0, [r7, #4]
 259:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 260:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locHead;
 261:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 262:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 263:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 264:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 265:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 266:Generated_Source\PSoC4/UART_SPI_UART.c ****             if ((UART_txBufferHead == UART_txBufferTail) &&
 245              		.loc 1 266 0
 246 0008 1D4B     		ldr	r3, .L21
 247 000a 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 10


 248 000c 1D4B     		ldr	r3, .L21+4
 249 000e 1B68     		ldr	r3, [r3]
 250 0010 9A42     		cmp	r2, r3
 251 0012 09D1     		bne	.L17
 267:Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 252              		.loc 1 267 0 discriminator 1
 253 0014 1C4B     		ldr	r3, .L21+8
 254 0016 1B68     		ldr	r3, [r3]
 255 0018 1F22     		mov	r2, #31
 256 001a 1340     		and	r3, r2
 266:Generated_Source\PSoC4/UART_SPI_UART.c ****                 (UART_SPI_UART_FIFO_SIZE != UART_GET_TX_FIFO_ENTRIES))
 257              		.loc 1 266 0 discriminator 1
 258 001c 082B     		cmp	r3, #8
 259 001e 03D0     		beq	.L17
 268:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 269:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 270:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_TX_FIFO_WR_REG = txData;
 260              		.loc 1 270 0
 261 0020 1A4B     		ldr	r3, .L21+12
 262 0022 7A68     		ldr	r2, [r7, #4]
 263 0024 1A60     		str	r2, [r3]
 264 0026 28E0     		b	.L16
 265              	.L17:
 271:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 272:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Put data into TX software buffer */
 273:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 274:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 275:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Head index to put data */
 276:Generated_Source\PSoC4/UART_SPI_UART.c ****                 locHead = (UART_txBufferHead + 1u);
 266              		.loc 1 276 0
 267 0028 154B     		ldr	r3, .L21
 268 002a 1B68     		ldr	r3, [r3]
 269 002c 0133     		add	r3, r3, #1
 270 002e FB60     		str	r3, [r7, #12]
 277:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 278:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Adjust TX software buffer index */
 279:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (UART_TX_BUFFER_SIZE == locHead)
 271              		.loc 1 279 0
 272 0030 FA68     		ldr	r2, [r7, #12]
 273 0032 8023     		mov	r3, #128
 274 0034 1B01     		lsl	r3, r3, #4
 275 0036 9A42     		cmp	r2, r3
 276 0038 01D1     		bne	.L19
 280:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 281:Generated_Source\PSoC4/UART_SPI_UART.c ****                     locHead = 0u;
 277              		.loc 1 281 0
 278 003a 0023     		mov	r3, #0
 279 003c FB60     		str	r3, [r7, #12]
 280              	.L19:
 282:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 283:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 284:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 285:Generated_Source\PSoC4/UART_SPI_UART.c ****                 while (locHead == UART_txBufferTail)
 281              		.loc 1 285 0
 282 003e C046     		mov	r8, r8
 283              	.L20:
 284              		.loc 1 285 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 11


 285 0040 104B     		ldr	r3, .L21+4
 286 0042 1B68     		ldr	r3, [r3]
 287 0044 FA68     		ldr	r2, [r7, #12]
 288 0046 9A42     		cmp	r2, r3
 289 0048 FAD0     		beq	.L20
 286:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 287:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 288:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 289:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* TX software buffer has at least one room */
 290:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 291:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 292:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_ClearTxInterruptSource(UART_INTR_TX_NOT_FULL);
 290              		.loc 1 292 0 is_stmt 1
 291 004a 114B     		ldr	r3, .L21+16
 292 004c 0222     		mov	r2, #2
 293 004e 1A60     		str	r2, [r3]
 293:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 294:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_PutWordInTxBuffer(locHead, txData);
 294              		.loc 1 294 0
 295 0050 7B68     		ldr	r3, [r7, #4]
 296 0052 D9B2     		uxtb	r1, r3
 297 0054 0F4A     		ldr	r2, .L21+20
 298 0056 FB68     		ldr	r3, [r7, #12]
 299 0058 D318     		add	r3, r2, r3
 300 005a 0A1C     		add	r2, r1, #0
 301 005c 1A70     		strb	r2, [r3]
 295:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 296:Generated_Source\PSoC4/UART_SPI_UART.c ****                 UART_txBufferHead = locHead;
 302              		.loc 1 296 0
 303 005e 084B     		ldr	r3, .L21
 304 0060 FA68     		ldr	r2, [r7, #12]
 305 0062 1A60     		str	r2, [r3]
 297:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 298:Generated_Source\PSoC4/UART_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 299:Generated_Source\PSoC4/UART_SPI_UART.c ****                 if (0u == (UART_INTR_TX_MASK_REG & UART_INTR_TX_NOT_FULL))
 306              		.loc 1 299 0
 307 0064 0C4B     		ldr	r3, .L21+24
 308 0066 1B68     		ldr	r3, [r3]
 309 0068 0222     		mov	r2, #2
 310 006a 1340     		and	r3, r2
 311 006c 05D1     		bne	.L16
 300:Generated_Source\PSoC4/UART_SPI_UART.c ****                 {
 301:Generated_Source\PSoC4/UART_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 302:Generated_Source\PSoC4/UART_SPI_UART.c ****                     UART_INTR_TX_MASK_REG |= (uint32) UART_INTR_TX_NOT_FULL;
 312              		.loc 1 302 0
 313 006e 0A4B     		ldr	r3, .L21+24
 314 0070 094A     		ldr	r2, .L21+24
 315 0072 1268     		ldr	r2, [r2]
 316 0074 0221     		mov	r1, #2
 317 0076 0A43     		orr	r2, r1
 318 0078 1A60     		str	r2, [r3]
 319              	.L16:
 303:Generated_Source\PSoC4/UART_SPI_UART.c ****                 }
 304:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 305:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 306:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 307:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 12


 308:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 309:Generated_Source\PSoC4/UART_SPI_UART.c ****             while (UART_SPI_UART_FIFO_SIZE == UART_GET_TX_FIFO_ENTRIES)
 310:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 311:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 312:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 313:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_TX_FIFO_WR_REG = txData;
 314:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 315:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 316:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 320              		.loc 1 316 0
 321 007a BD46     		mov	sp, r7
 322 007c 04B0     		add	sp, sp, #16
 323              		@ sp needed
 324 007e 80BD     		pop	{r7, pc}
 325              	.L22:
 326              		.align	2
 327              	.L21:
 328 0080 00000000 		.word	UART_txBufferHead
 329 0084 00000000 		.word	UART_txBufferTail
 330 0088 08022440 		.word	1076101640
 331 008c 40022440 		.word	1076101696
 332 0090 800F2440 		.word	1076105088
 333 0094 00000000 		.word	UART_txBufferInternal
 334 0098 880F2440 		.word	1076105096
 335              		.cfi_endproc
 336              	.LFE5:
 337              		.size	UART_SpiUartWriteTxData, .-UART_SpiUartWriteTxData
 338              		.section	.text.UART_SpiUartPutArray,"ax",%progbits
 339              		.align	2
 340              		.global	UART_SpiUartPutArray
 341              		.code	16
 342              		.thumb_func
 343              		.type	UART_SpiUartPutArray, %function
 344              	UART_SpiUartPutArray:
 345              	.LFB6:
 317:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 318:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 319:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartPutArray
 321:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 323:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 324:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 325:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 326:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  than transmit buffer size.
 327:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 328:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \param wrBuf: pointer to an array of data to be placed in transmit buffer. 
 329:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  The width of the data to be transmitted depends on TX data width selection 
 330:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  (the data bit counting starts from LSB for each array element).
 331:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \param count: number of data elements to be placed in the transmit buffer.
 332:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 333:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 334:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 335:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 336:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 337:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 338:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 13


 339:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 340:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 341:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 346              		.loc 1 341 0
 347              		.cfi_startproc
 348 0000 80B5     		push	{r7, lr}
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 7, -8
 351              		.cfi_offset 14, -4
 352 0002 84B0     		sub	sp, sp, #16
 353              		.cfi_def_cfa_offset 24
 354 0004 00AF     		add	r7, sp, #0
 355              		.cfi_def_cfa_register 7
 356 0006 7860     		str	r0, [r7, #4]
 357 0008 3960     		str	r1, [r7]
 342:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 i;
 343:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         for (i=0u; i < count; i++)
 358              		.loc 1 344 0
 359 000a 0023     		mov	r3, #0
 360 000c FB60     		str	r3, [r7, #12]
 361 000e 09E0     		b	.L24
 362              	.L25:
 345:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 346:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_SpiUartWriteTxData((uint32) wrBuf[i]);
 363              		.loc 1 346 0 discriminator 3
 364 0010 7A68     		ldr	r2, [r7, #4]
 365 0012 FB68     		ldr	r3, [r7, #12]
 366 0014 D318     		add	r3, r2, r3
 367 0016 1B78     		ldrb	r3, [r3]
 368 0018 181C     		mov	r0, r3
 369 001a FFF7FEFF 		bl	UART_SpiUartWriteTxData
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 370              		.loc 1 344 0 discriminator 3
 371 001e FB68     		ldr	r3, [r7, #12]
 372 0020 0133     		add	r3, r3, #1
 373 0022 FB60     		str	r3, [r7, #12]
 374              	.L24:
 344:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 375              		.loc 1 344 0 is_stmt 0 discriminator 1
 376 0024 FA68     		ldr	r2, [r7, #12]
 377 0026 3B68     		ldr	r3, [r7]
 378 0028 9A42     		cmp	r2, r3
 379 002a F1D3     		bcc	.L25
 347:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 348:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 380              		.loc 1 348 0 is_stmt 1
 381 002c BD46     		mov	sp, r7
 382 002e 04B0     		add	sp, sp, #16
 383              		@ sp needed
 384 0030 80BD     		pop	{r7, pc}
 385              		.cfi_endproc
 386              	.LFE6:
 387              		.size	UART_SpiUartPutArray, .-UART_SpiUartPutArray
 388 0032 C046     		.section	.text.UART_SpiUartGetTxBufferSize,"ax",%progbits
 389              		.align	2
 390              		.global	UART_SpiUartGetTxBufferSize
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 14


 391              		.code	16
 392              		.thumb_func
 393              		.type	UART_SpiUartGetTxBufferSize, %function
 394              	UART_SpiUartGetTxBufferSize:
 395              	.LFB7:
 349:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 350:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 351:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartGetTxBufferSize
 353:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 355:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Returns the number of elements currently in the transmit buffer.
 356:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - TX software buffer is disabled: returns the number of used entries in
 357:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     TX FIFO.
 358:Generated_Source\PSoC4/UART_SPI_UART.c ****     *   - TX software buffer is enabled: returns the number of elements currently
 359:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     used in the transmit buffer. This number does not include used entries in
 360:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 361:Generated_Source\PSoC4/UART_SPI_UART.c ****     *     not full.
 362:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 363:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \return
 364:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Number of data elements ready to transmit.
 365:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 366:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 367:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 368:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 369:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 370:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 371:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 372:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 373:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 UART_SpiUartGetTxBufferSize(void)
 374:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 396              		.loc 1 374 0
 397              		.cfi_startproc
 398 0000 80B5     		push	{r7, lr}
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 7, -8
 401              		.cfi_offset 14, -4
 402 0002 82B0     		sub	sp, sp, #8
 403              		.cfi_def_cfa_offset 16
 404 0004 00AF     		add	r7, sp, #0
 405              		.cfi_def_cfa_register 7
 375:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 size;
 376:Generated_Source\PSoC4/UART_SPI_UART.c ****     #if (UART_INTERNAL_TX_SW_BUFFER_CONST)
 377:Generated_Source\PSoC4/UART_SPI_UART.c ****         uint32 locTail;
 378:Generated_Source\PSoC4/UART_SPI_UART.c ****     #endif /* (UART_INTERNAL_TX_SW_BUFFER_CONST) */
 379:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 380:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 381:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 382:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Get current Tail index */
 383:Generated_Source\PSoC4/UART_SPI_UART.c ****             locTail = UART_txBufferTail;
 406              		.loc 1 383 0
 407 0006 0E4B     		ldr	r3, .L30
 408 0008 1B68     		ldr	r3, [r3]
 409 000a 3B60     		str	r3, [r7]
 384:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 385:Generated_Source\PSoC4/UART_SPI_UART.c ****             if (UART_txBufferHead >= locTail)
 410              		.loc 1 385 0
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 15


 411 000c 0D4B     		ldr	r3, .L30+4
 412 000e 1A68     		ldr	r2, [r3]
 413 0010 3B68     		ldr	r3, [r7]
 414 0012 9A42     		cmp	r2, r3
 415 0014 05D3     		bcc	.L27
 386:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 387:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead - locTail);
 416              		.loc 1 387 0
 417 0016 0B4B     		ldr	r3, .L30+4
 418 0018 1A68     		ldr	r2, [r3]
 419 001a 3B68     		ldr	r3, [r7]
 420 001c D31A     		sub	r3, r2, r3
 421 001e 7B60     		str	r3, [r7, #4]
 422 0020 08E0     		b	.L28
 423              	.L27:
 388:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 389:Generated_Source\PSoC4/UART_SPI_UART.c ****             else
 390:Generated_Source\PSoC4/UART_SPI_UART.c ****             {
 391:Generated_Source\PSoC4/UART_SPI_UART.c ****                 size = (UART_txBufferHead + (UART_TX_BUFFER_SIZE - locTail));
 424              		.loc 1 391 0
 425 0022 084B     		ldr	r3, .L30+4
 426 0024 1A68     		ldr	r2, [r3]
 427 0026 3B68     		ldr	r3, [r7]
 428 0028 D31A     		sub	r3, r2, r3
 429 002a 8022     		mov	r2, #128
 430 002c 1201     		lsl	r2, r2, #4
 431 002e 9446     		mov	ip, r2
 432 0030 6344     		add	r3, r3, ip
 433 0032 7B60     		str	r3, [r7, #4]
 434              	.L28:
 392:Generated_Source\PSoC4/UART_SPI_UART.c ****             }
 393:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 394:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 395:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 396:Generated_Source\PSoC4/UART_SPI_UART.c ****             size = UART_GET_TX_FIFO_ENTRIES;
 397:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 398:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 399:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 400:Generated_Source\PSoC4/UART_SPI_UART.c ****         return (size);
 435              		.loc 1 400 0
 436 0034 7B68     		ldr	r3, [r7, #4]
 401:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 437              		.loc 1 401 0
 438 0036 181C     		mov	r0, r3
 439 0038 BD46     		mov	sp, r7
 440 003a 02B0     		add	sp, sp, #8
 441              		@ sp needed
 442 003c 80BD     		pop	{r7, pc}
 443              	.L31:
 444 003e C046     		.align	2
 445              	.L30:
 446 0040 00000000 		.word	UART_txBufferTail
 447 0044 00000000 		.word	UART_txBufferHead
 448              		.cfi_endproc
 449              	.LFE7:
 450              		.size	UART_SpiUartGetTxBufferSize, .-UART_SpiUartGetTxBufferSize
 451              		.section	.text.UART_SpiUartClearTxBuffer,"ax",%progbits
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 16


 452              		.align	2
 453              		.global	UART_SpiUartClearTxBuffer
 454              		.code	16
 455              		.thumb_func
 456              		.type	UART_SpiUartClearTxBuffer, %function
 457              	UART_SpiUartClearTxBuffer:
 458              	.LFB8:
 402:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 403:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 404:Generated_Source\PSoC4/UART_SPI_UART.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/UART_SPI_UART.c ****     * Function Name: UART_SpiUartClearTxBuffer
 406:Generated_Source\PSoC4/UART_SPI_UART.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 408:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
 409:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 410:Generated_Source\PSoC4/UART_SPI_UART.c ****     * \globalvars
 411:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferHead - the start index to put data into the 
 412:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  software transmit buffer.
 413:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  UART_txBufferTail - start index to get data from the software
 414:Generated_Source\PSoC4/UART_SPI_UART.c ****     *  transmit buffer.
 415:Generated_Source\PSoC4/UART_SPI_UART.c ****     *
 416:Generated_Source\PSoC4/UART_SPI_UART.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/UART_SPI_UART.c ****     void UART_SpiUartClearTxBuffer(void)
 418:Generated_Source\PSoC4/UART_SPI_UART.c ****     {
 459              		.loc 1 418 0
 460              		.cfi_startproc
 461 0000 80B5     		push	{r7, lr}
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 7, -8
 464              		.cfi_offset 14, -4
 465 0002 00AF     		add	r7, sp, #0
 466              		.cfi_def_cfa_register 7
 419:Generated_Source\PSoC4/UART_SPI_UART.c ****         #if (UART_CHECK_TX_SW_BUFFER)
 420:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 421:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Lock from component interruption */
 422:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_DisableInt();
 467              		.loc 1 422 0
 468 0004 0920     		mov	r0, #9
 469 0006 FFF7FEFF 		bl	CyIntDisable
 423:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 424:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Flush TX software buffer */
 425:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_txBufferHead = UART_txBufferTail;
 470              		.loc 1 425 0
 471 000a 0F4B     		ldr	r3, .L33
 472 000c 1A68     		ldr	r2, [r3]
 473 000e 0F4B     		ldr	r3, .L33+4
 474 0010 1A60     		str	r2, [r3]
 426:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 427:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_INTR_TX_MASK_REG &= (uint32) ~UART_INTR_TX_NOT_FULL;
 475              		.loc 1 427 0
 476 0012 0F4B     		ldr	r3, .L33+8
 477 0014 0E4A     		ldr	r2, .L33+8
 478 0016 1268     		ldr	r2, [r2]
 479 0018 0221     		mov	r1, #2
 480 001a 8A43     		bic	r2, r1
 481 001c 1A60     		str	r2, [r3]
 428:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 17


 482              		.loc 1 428 0
 483 001e 0D4B     		ldr	r3, .L33+12
 484 0020 0C4A     		ldr	r2, .L33+12
 485 0022 1268     		ldr	r2, [r2]
 486 0024 8021     		mov	r1, #128
 487 0026 4902     		lsl	r1, r1, #9
 488 0028 0A43     		orr	r2, r1
 489 002a 1A60     		str	r2, [r3]
 490 002c 094B     		ldr	r3, .L33+12
 491 002e 094A     		ldr	r2, .L33+12
 492 0030 1268     		ldr	r2, [r2]
 493 0032 0949     		ldr	r1, .L33+16
 494 0034 0A40     		and	r2, r1
 495 0036 1A60     		str	r2, [r3]
 429:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_ClearTxInterruptSource(UART_INTR_TX_ALL);
 496              		.loc 1 429 0
 497 0038 084B     		ldr	r3, .L33+20
 498 003a 094A     		ldr	r2, .L33+24
 499 003c 1A60     		str	r2, [r3]
 430:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 431:Generated_Source\PSoC4/UART_SPI_UART.c ****             /* Release lock */
 432:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_EnableInt();
 500              		.loc 1 432 0
 501 003e 0920     		mov	r0, #9
 502 0040 FFF7FEFF 		bl	CyIntEnable
 433:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 434:Generated_Source\PSoC4/UART_SPI_UART.c ****         #else
 435:Generated_Source\PSoC4/UART_SPI_UART.c ****         {
 436:Generated_Source\PSoC4/UART_SPI_UART.c ****             UART_CLEAR_TX_FIFO;
 437:Generated_Source\PSoC4/UART_SPI_UART.c ****         }
 438:Generated_Source\PSoC4/UART_SPI_UART.c ****         #endif
 439:Generated_Source\PSoC4/UART_SPI_UART.c ****     }
 503              		.loc 1 439 0
 504 0044 BD46     		mov	sp, r7
 505              		@ sp needed
 506 0046 80BD     		pop	{r7, pc}
 507              	.L34:
 508              		.align	2
 509              	.L33:
 510 0048 00000000 		.word	UART_txBufferTail
 511 004c 00000000 		.word	UART_txBufferHead
 512 0050 880F2440 		.word	1076105096
 513 0054 04022440 		.word	1076101636
 514 0058 FFFFFEFF 		.word	-65537
 515 005c 800F2440 		.word	1076105088
 516 0060 F3070000 		.word	2035
 517              		.cfi_endproc
 518              	.LFE8:
 519              		.size	UART_SpiUartClearTxBuffer, .-UART_SpiUartClearTxBuffer
 520              		.section	.text.UART_SpiUartDisableIntRx,"ax",%progbits
 521              		.align	2
 522              		.global	UART_SpiUartDisableIntRx
 523              		.code	16
 524              		.thumb_func
 525              		.type	UART_SpiUartDisableIntRx, %function
 526              	UART_SpiUartDisableIntRx:
 527              	.LFB9:
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 18


 440:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 441:Generated_Source\PSoC4/UART_SPI_UART.c **** #endif /* (UART_TX_DIRECTION) */
 442:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 443:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 444:Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntRx
 446:Generated_Source\PSoC4/UART_SPI_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 448:Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables the RX interrupt sources.
 449:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 450:Generated_Source\PSoC4/UART_SPI_UART.c **** *  \return
 451:Generated_Source\PSoC4/UART_SPI_UART.c **** *   Returns the RX interrupt sources enabled before the function call.
 452:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 453:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 454:Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntRx(void)
 455:Generated_Source\PSoC4/UART_SPI_UART.c **** {
 528              		.loc 1 455 0
 529              		.cfi_startproc
 530 0000 80B5     		push	{r7, lr}
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 7, -8
 533              		.cfi_offset 14, -4
 534 0002 82B0     		sub	sp, sp, #8
 535              		.cfi_def_cfa_offset 16
 536 0004 00AF     		add	r7, sp, #0
 537              		.cfi_def_cfa_register 7
 456:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSource;
 457:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 458:Generated_Source\PSoC4/UART_SPI_UART.c ****     intSource = UART_GetRxInterruptMode();
 538              		.loc 1 458 0
 539 0006 054B     		ldr	r3, .L37
 540 0008 1B68     		ldr	r3, [r3]
 541 000a 7B60     		str	r3, [r7, #4]
 459:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 460:Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetRxInterruptMode(UART_NO_INTR_SOURCES);
 542              		.loc 1 460 0
 543 000c 034B     		ldr	r3, .L37
 544 000e 0022     		mov	r2, #0
 545 0010 1A60     		str	r2, [r3]
 461:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 462:Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSource);
 546              		.loc 1 462 0
 547 0012 7B68     		ldr	r3, [r7, #4]
 463:Generated_Source\PSoC4/UART_SPI_UART.c **** }
 548              		.loc 1 463 0
 549 0014 181C     		mov	r0, r3
 550 0016 BD46     		mov	sp, r7
 551 0018 02B0     		add	sp, sp, #8
 552              		@ sp needed
 553 001a 80BD     		pop	{r7, pc}
 554              	.L38:
 555              		.align	2
 556              	.L37:
 557 001c C80F2440 		.word	1076105160
 558              		.cfi_endproc
 559              	.LFE9:
 560              		.size	UART_SpiUartDisableIntRx, .-UART_SpiUartDisableIntRx
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 19


 561              		.section	.text.UART_SpiUartDisableIntTx,"ax",%progbits
 562              		.align	2
 563              		.global	UART_SpiUartDisableIntTx
 564              		.code	16
 565              		.thumb_func
 566              		.type	UART_SpiUartDisableIntTx, %function
 567              	UART_SpiUartDisableIntTx:
 568              	.LFB10:
 464:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 465:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 466:Generated_Source\PSoC4/UART_SPI_UART.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/UART_SPI_UART.c **** * Function Name: UART_SpiUartDisableIntTx
 468:Generated_Source\PSoC4/UART_SPI_UART.c **** ****************************************************************************//**
 469:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 470:Generated_Source\PSoC4/UART_SPI_UART.c **** *  Disables TX interrupt sources.
 471:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 472:Generated_Source\PSoC4/UART_SPI_UART.c **** *  \return
 473:Generated_Source\PSoC4/UART_SPI_UART.c **** *   Returns TX interrupt sources enabled before function call.
 474:Generated_Source\PSoC4/UART_SPI_UART.c **** *
 475:Generated_Source\PSoC4/UART_SPI_UART.c **** *******************************************************************************/
 476:Generated_Source\PSoC4/UART_SPI_UART.c **** uint32 UART_SpiUartDisableIntTx(void)
 477:Generated_Source\PSoC4/UART_SPI_UART.c **** {
 569              		.loc 1 477 0
 570              		.cfi_startproc
 571 0000 80B5     		push	{r7, lr}
 572              		.cfi_def_cfa_offset 8
 573              		.cfi_offset 7, -8
 574              		.cfi_offset 14, -4
 575 0002 82B0     		sub	sp, sp, #8
 576              		.cfi_def_cfa_offset 16
 577 0004 00AF     		add	r7, sp, #0
 578              		.cfi_def_cfa_register 7
 478:Generated_Source\PSoC4/UART_SPI_UART.c ****     uint32 intSourceMask;
 479:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 480:Generated_Source\PSoC4/UART_SPI_UART.c ****     intSourceMask = UART_GetTxInterruptMode();
 579              		.loc 1 480 0
 580 0006 054B     		ldr	r3, .L41
 581 0008 1B68     		ldr	r3, [r3]
 582 000a 7B60     		str	r3, [r7, #4]
 481:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 482:Generated_Source\PSoC4/UART_SPI_UART.c ****     UART_SetTxInterruptMode(UART_NO_INTR_SOURCES);
 583              		.loc 1 482 0
 584 000c 034B     		ldr	r3, .L41
 585 000e 0022     		mov	r2, #0
 586 0010 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/UART_SPI_UART.c **** 
 484:Generated_Source\PSoC4/UART_SPI_UART.c ****     return (intSourceMask);
 587              		.loc 1 484 0
 588 0012 7B68     		ldr	r3, [r7, #4]
 485:Generated_Source\PSoC4/UART_SPI_UART.c **** }
 589              		.loc 1 485 0
 590 0014 181C     		mov	r0, r3
 591 0016 BD46     		mov	sp, r7
 592 0018 02B0     		add	sp, sp, #8
 593              		@ sp needed
 594 001a 80BD     		pop	{r7, pc}
 595              	.L42:
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 20


 596              		.align	2
 597              	.L41:
 598 001c 880F2440 		.word	1076105096
 599              		.cfi_endproc
 600              	.LFE10:
 601              		.size	UART_SpiUartDisableIntTx, .-UART_SpiUartDisableIntTx
 602              		.text
 603              	.Letext0:
 604              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 605              		.section	.debug_info,"",%progbits
 606              	.Ldebug_info0:
 607 0000 F3020000 		.4byte	0x2f3
 608 0004 0400     		.2byte	0x4
 609 0006 00000000 		.4byte	.Ldebug_abbrev0
 610 000a 04       		.byte	0x4
 611 000b 01       		.uleb128 0x1
 612 000c EC000000 		.4byte	.LASF41
 613 0010 01       		.byte	0x1
 614 0011 CF020000 		.4byte	.LASF42
 615 0015 64020000 		.4byte	.LASF43
 616 0019 00000000 		.4byte	.Ldebug_ranges0+0
 617 001d 00000000 		.4byte	0
 618 0021 00000000 		.4byte	.Ldebug_line0
 619 0025 02       		.uleb128 0x2
 620 0026 01       		.byte	0x1
 621 0027 06       		.byte	0x6
 622 0028 4B030000 		.4byte	.LASF0
 623 002c 02       		.uleb128 0x2
 624 002d 01       		.byte	0x1
 625 002e 08       		.byte	0x8
 626 002f AF000000 		.4byte	.LASF1
 627 0033 02       		.uleb128 0x2
 628 0034 02       		.byte	0x2
 629 0035 05       		.byte	0x5
 630 0036 5A020000 		.4byte	.LASF2
 631 003a 02       		.uleb128 0x2
 632 003b 02       		.byte	0x2
 633 003c 07       		.byte	0x7
 634 003d 13000000 		.4byte	.LASF3
 635 0041 02       		.uleb128 0x2
 636 0042 04       		.byte	0x4
 637 0043 05       		.byte	0x5
 638 0044 0D030000 		.4byte	.LASF4
 639 0048 02       		.uleb128 0x2
 640 0049 04       		.byte	0x4
 641 004a 07       		.byte	0x7
 642 004b 78000000 		.4byte	.LASF5
 643 004f 02       		.uleb128 0x2
 644 0050 08       		.byte	0x8
 645 0051 05       		.byte	0x5
 646 0052 06020000 		.4byte	.LASF6
 647 0056 02       		.uleb128 0x2
 648 0057 08       		.byte	0x8
 649 0058 07       		.byte	0x7
 650 0059 C8010000 		.4byte	.LASF7
 651 005d 03       		.uleb128 0x3
 652 005e 04       		.byte	0x4
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 21


 653 005f 05       		.byte	0x5
 654 0060 696E7400 		.ascii	"int\000"
 655 0064 02       		.uleb128 0x2
 656 0065 04       		.byte	0x4
 657 0066 07       		.byte	0x7
 658 0067 26000000 		.4byte	.LASF8
 659 006b 04       		.uleb128 0x4
 660 006c 8A000000 		.4byte	.LASF9
 661 0070 02       		.byte	0x2
 662 0071 B901     		.2byte	0x1b9
 663 0073 2C000000 		.4byte	0x2c
 664 0077 04       		.uleb128 0x4
 665 0078 7A010000 		.4byte	.LASF10
 666 007c 02       		.byte	0x2
 667 007d BB01     		.2byte	0x1bb
 668 007f 48000000 		.4byte	0x48
 669 0083 02       		.uleb128 0x2
 670 0084 04       		.byte	0x4
 671 0085 04       		.byte	0x4
 672 0086 54000000 		.4byte	.LASF11
 673 008a 02       		.uleb128 0x2
 674 008b 08       		.byte	0x8
 675 008c 04       		.byte	0x4
 676 008d D3000000 		.4byte	.LASF12
 677 0091 02       		.uleb128 0x2
 678 0092 01       		.byte	0x1
 679 0093 08       		.byte	0x8
 680 0094 16030000 		.4byte	.LASF13
 681 0098 05       		.uleb128 0x5
 682 0099 6B000000 		.4byte	0x6b
 683 009d 04       		.uleb128 0x4
 684 009e 00000000 		.4byte	.LASF14
 685 00a2 02       		.byte	0x2
 686 00a3 6502     		.2byte	0x265
 687 00a5 A9000000 		.4byte	0xa9
 688 00a9 05       		.uleb128 0x5
 689 00aa 77000000 		.4byte	0x77
 690 00ae 02       		.uleb128 0x2
 691 00af 04       		.byte	0x4
 692 00b0 07       		.byte	0x7
 693 00b1 FD010000 		.4byte	.LASF15
 694 00b5 06       		.uleb128 0x6
 695 00b6 F6020000 		.4byte	.LASF18
 696 00ba 01       		.byte	0x1
 697 00bb 53       		.byte	0x53
 698 00bc 77000000 		.4byte	0x77
 699 00c0 00000000 		.4byte	.LFB2
 700 00c4 58000000 		.4byte	.LFE2-.LFB2
 701 00c8 01       		.uleb128 0x1
 702 00c9 9C       		.byte	0x9c
 703 00ca EB000000 		.4byte	0xeb
 704 00ce 07       		.uleb128 0x7
 705 00cf A2000000 		.4byte	.LASF16
 706 00d3 01       		.byte	0x1
 707 00d4 55       		.byte	0x55
 708 00d5 77000000 		.4byte	0x77
 709 00d9 02       		.uleb128 0x2
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 22


 710 00da 91       		.byte	0x91
 711 00db 74       		.sleb128 -12
 712 00dc 07       		.uleb128 0x7
 713 00dd F5010000 		.4byte	.LASF17
 714 00e1 01       		.byte	0x1
 715 00e2 58       		.byte	0x58
 716 00e3 77000000 		.4byte	0x77
 717 00e7 02       		.uleb128 0x2
 718 00e8 91       		.byte	0x91
 719 00e9 70       		.sleb128 -16
 720 00ea 00       		.byte	0
 721 00eb 06       		.uleb128 0x6
 722 00ec 57030000 		.4byte	.LASF19
 723 00f0 01       		.byte	0x1
 724 00f1 9D       		.byte	0x9d
 725 00f2 77000000 		.4byte	0x77
 726 00f6 00000000 		.4byte	.LFB3
 727 00fa 48000000 		.4byte	.LFE3-.LFB3
 728 00fe 01       		.uleb128 0x1
 729 00ff 9C       		.byte	0x9c
 730 0100 21010000 		.4byte	0x121
 731 0104 07       		.uleb128 0x7
 732 0105 73000000 		.4byte	.LASF20
 733 0109 01       		.byte	0x1
 734 010a 9F       		.byte	0x9f
 735 010b 77000000 		.4byte	0x77
 736 010f 02       		.uleb128 0x2
 737 0110 91       		.byte	0x91
 738 0111 74       		.sleb128 -12
 739 0112 07       		.uleb128 0x7
 740 0113 4C000000 		.4byte	.LASF21
 741 0117 01       		.byte	0x1
 742 0118 A1       		.byte	0xa1
 743 0119 77000000 		.4byte	0x77
 744 011d 02       		.uleb128 0x2
 745 011e 91       		.byte	0x91
 746 011f 70       		.sleb128 -16
 747 0120 00       		.byte	0
 748 0121 08       		.uleb128 0x8
 749 0122 1B030000 		.4byte	.LASF28
 750 0126 01       		.byte	0x1
 751 0127 C8       		.byte	0xc8
 752 0128 00000000 		.4byte	.LFB4
 753 012c 60000000 		.4byte	.LFE4-.LFB4
 754 0130 01       		.uleb128 0x1
 755 0131 9C       		.byte	0x9c
 756 0132 09       		.uleb128 0x9
 757 0133 14020000 		.4byte	.LASF22
 758 0137 01       		.byte	0x1
 759 0138 0101     		.2byte	0x101
 760 013a 00000000 		.4byte	.LFB5
 761 013e 9C000000 		.4byte	.LFE5-.LFB5
 762 0142 01       		.uleb128 0x1
 763 0143 9C       		.byte	0x9c
 764 0144 67010000 		.4byte	0x167
 765 0148 0A       		.uleb128 0xa
 766 0149 0C000000 		.4byte	.LASF24
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 23


 767 014d 01       		.byte	0x1
 768 014e 0101     		.2byte	0x101
 769 0150 77000000 		.4byte	0x77
 770 0154 02       		.uleb128 0x2
 771 0155 91       		.byte	0x91
 772 0156 6C       		.sleb128 -20
 773 0157 0B       		.uleb128 0xb
 774 0158 4C000000 		.4byte	.LASF21
 775 015c 01       		.byte	0x1
 776 015d 0401     		.2byte	0x104
 777 015f 77000000 		.4byte	0x77
 778 0163 02       		.uleb128 0x2
 779 0164 91       		.byte	0x91
 780 0165 74       		.sleb128 -12
 781 0166 00       		.byte	0
 782 0167 0C       		.uleb128 0xc
 783 0168 9B010000 		.4byte	.LASF23
 784 016c 01       		.byte	0x1
 785 016d 5401     		.2byte	0x154
 786 016f 00000000 		.4byte	.LFB6
 787 0173 32000000 		.4byte	.LFE6-.LFB6
 788 0177 01       		.uleb128 0x1
 789 0178 9C       		.byte	0x9c
 790 0179 A9010000 		.4byte	0x1a9
 791 017d 0A       		.uleb128 0xa
 792 017e A9000000 		.4byte	.LASF25
 793 0182 01       		.byte	0x1
 794 0183 5401     		.2byte	0x154
 795 0185 A9010000 		.4byte	0x1a9
 796 0189 02       		.uleb128 0x2
 797 018a 91       		.byte	0x91
 798 018b 6C       		.sleb128 -20
 799 018c 0A       		.uleb128 0xa
 800 018d 06000000 		.4byte	.LASF26
 801 0191 01       		.byte	0x1
 802 0192 5401     		.2byte	0x154
 803 0194 77000000 		.4byte	0x77
 804 0198 02       		.uleb128 0x2
 805 0199 91       		.byte	0x91
 806 019a 68       		.sleb128 -24
 807 019b 0D       		.uleb128 0xd
 808 019c 6900     		.ascii	"i\000"
 809 019e 01       		.byte	0x1
 810 019f 5601     		.2byte	0x156
 811 01a1 77000000 		.4byte	0x77
 812 01a5 02       		.uleb128 0x2
 813 01a6 91       		.byte	0x91
 814 01a7 74       		.sleb128 -12
 815 01a8 00       		.byte	0
 816 01a9 0E       		.uleb128 0xe
 817 01aa 04       		.byte	0x4
 818 01ab AF010000 		.4byte	0x1af
 819 01af 0F       		.uleb128 0xf
 820 01b0 6B000000 		.4byte	0x6b
 821 01b4 10       		.uleb128 0x10
 822 01b5 2C020000 		.4byte	.LASF27
 823 01b9 01       		.byte	0x1
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 24


 824 01ba 7501     		.2byte	0x175
 825 01bc 77000000 		.4byte	0x77
 826 01c0 00000000 		.4byte	.LFB7
 827 01c4 48000000 		.4byte	.LFE7-.LFB7
 828 01c8 01       		.uleb128 0x1
 829 01c9 9C       		.byte	0x9c
 830 01ca ED010000 		.4byte	0x1ed
 831 01ce 0B       		.uleb128 0xb
 832 01cf 73000000 		.4byte	.LASF20
 833 01d3 01       		.byte	0x1
 834 01d4 7701     		.2byte	0x177
 835 01d6 77000000 		.4byte	0x77
 836 01da 02       		.uleb128 0x2
 837 01db 91       		.byte	0x91
 838 01dc 74       		.sleb128 -12
 839 01dd 0B       		.uleb128 0xb
 840 01de F5010000 		.4byte	.LASF17
 841 01e2 01       		.byte	0x1
 842 01e3 7901     		.2byte	0x179
 843 01e5 77000000 		.4byte	0x77
 844 01e9 02       		.uleb128 0x2
 845 01ea 91       		.byte	0x91
 846 01eb 70       		.sleb128 -16
 847 01ec 00       		.byte	0
 848 01ed 11       		.uleb128 0x11
 849 01ee 81010000 		.4byte	.LASF29
 850 01f2 01       		.byte	0x1
 851 01f3 A101     		.2byte	0x1a1
 852 01f5 00000000 		.4byte	.LFB8
 853 01f9 64000000 		.4byte	.LFE8-.LFB8
 854 01fd 01       		.uleb128 0x1
 855 01fe 9C       		.byte	0x9c
 856 01ff 10       		.uleb128 0x10
 857 0200 33000000 		.4byte	.LASF30
 858 0204 01       		.byte	0x1
 859 0205 C601     		.2byte	0x1c6
 860 0207 77000000 		.4byte	0x77
 861 020b 00000000 		.4byte	.LFB9
 862 020f 20000000 		.4byte	.LFE9-.LFB9
 863 0213 01       		.uleb128 0x1
 864 0214 9C       		.byte	0x9c
 865 0215 29020000 		.4byte	0x229
 866 0219 0B       		.uleb128 0xb
 867 021a BE010000 		.4byte	.LASF31
 868 021e 01       		.byte	0x1
 869 021f C801     		.2byte	0x1c8
 870 0221 77000000 		.4byte	0x77
 871 0225 02       		.uleb128 0x2
 872 0226 91       		.byte	0x91
 873 0227 74       		.sleb128 -12
 874 0228 00       		.byte	0
 875 0229 10       		.uleb128 0x10
 876 022a 5A000000 		.4byte	.LASF32
 877 022e 01       		.byte	0x1
 878 022f DC01     		.2byte	0x1dc
 879 0231 77000000 		.4byte	0x77
 880 0235 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 25


 881 0239 20000000 		.4byte	.LFE10-.LFB10
 882 023d 01       		.uleb128 0x1
 883 023e 9C       		.byte	0x9c
 884 023f 53020000 		.4byte	0x253
 885 0243 0B       		.uleb128 0xb
 886 0244 B0010000 		.4byte	.LASF33
 887 0248 01       		.byte	0x1
 888 0249 DE01     		.2byte	0x1de
 889 024b 77000000 		.4byte	0x77
 890 024f 02       		.uleb128 0x2
 891 0250 91       		.byte	0x91
 892 0251 74       		.sleb128 -12
 893 0252 00       		.byte	0
 894 0253 12       		.uleb128 0x12
 895 0254 73030000 		.4byte	.LASF34
 896 0258 01       		.byte	0x1
 897 0259 1C       		.byte	0x1c
 898 025a A9000000 		.4byte	0xa9
 899 025e 05       		.uleb128 0x5
 900 025f 03       		.byte	0x3
 901 0260 00000000 		.4byte	UART_rxBufferHead
 902 0264 12       		.uleb128 0x12
 903 0265 90000000 		.4byte	.LASF35
 904 0269 01       		.byte	0x1
 905 026a 1E       		.byte	0x1e
 906 026b A9000000 		.4byte	0xa9
 907 026f 05       		.uleb128 0x5
 908 0270 03       		.byte	0x3
 909 0271 00000000 		.4byte	UART_rxBufferTail
 910 0275 12       		.uleb128 0x12
 911 0276 DF010000 		.4byte	.LASF36
 912 027a 01       		.byte	0x1
 913 027b 26       		.byte	0x26
 914 027c 98000000 		.4byte	0x98
 915 0280 05       		.uleb128 0x5
 916 0281 03       		.byte	0x3
 917 0282 00000000 		.4byte	UART_rxBufferOverflow
 918 0286 12       		.uleb128 0x12
 919 0287 48020000 		.4byte	.LASF37
 920 028b 01       		.byte	0x1
 921 028c 2C       		.byte	0x2c
 922 028d A9000000 		.4byte	0xa9
 923 0291 05       		.uleb128 0x5
 924 0292 03       		.byte	0x3
 925 0293 00000000 		.4byte	UART_txBufferHead
 926 0297 12       		.uleb128 0x12
 927 0298 DA000000 		.4byte	.LASF38
 928 029c 01       		.byte	0x1
 929 029d 2E       		.byte	0x2e
 930 029e A9000000 		.4byte	0xa9
 931 02a2 05       		.uleb128 0x5
 932 02a3 03       		.byte	0x3
 933 02a4 00000000 		.4byte	UART_txBufferTail
 934 02a8 13       		.uleb128 0x13
 935 02a9 6B000000 		.4byte	0x6b
 936 02ad B9020000 		.4byte	0x2b9
 937 02b1 14       		.uleb128 0x14
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 26


 938 02b2 AE000000 		.4byte	0xae
 939 02b6 0008     		.2byte	0x800
 940 02b8 00       		.byte	0
 941 02b9 12       		.uleb128 0x12
 942 02ba BD000000 		.4byte	.LASF39
 943 02be 01       		.byte	0x1
 944 02bf 33       		.byte	0x33
 945 02c0 CA020000 		.4byte	0x2ca
 946 02c4 05       		.uleb128 0x5
 947 02c5 03       		.byte	0x3
 948 02c6 00000000 		.4byte	UART_rxBufferInternal
 949 02ca 05       		.uleb128 0x5
 950 02cb A8020000 		.4byte	0x2a8
 951 02cf 13       		.uleb128 0x13
 952 02d0 6B000000 		.4byte	0x6b
 953 02d4 E0020000 		.4byte	0x2e0
 954 02d8 14       		.uleb128 0x14
 955 02d9 AE000000 		.4byte	0xae
 956 02dd FF07     		.2byte	0x7ff
 957 02df 00       		.byte	0
 958 02e0 12       		.uleb128 0x12
 959 02e1 35030000 		.4byte	.LASF40
 960 02e5 01       		.byte	0x1
 961 02e6 37       		.byte	0x37
 962 02e7 F1020000 		.4byte	0x2f1
 963 02eb 05       		.uleb128 0x5
 964 02ec 03       		.byte	0x3
 965 02ed 00000000 		.4byte	UART_txBufferInternal
 966 02f1 05       		.uleb128 0x5
 967 02f2 CF020000 		.4byte	0x2cf
 968 02f6 00       		.byte	0
 969              		.section	.debug_abbrev,"",%progbits
 970              	.Ldebug_abbrev0:
 971 0000 01       		.uleb128 0x1
 972 0001 11       		.uleb128 0x11
 973 0002 01       		.byte	0x1
 974 0003 25       		.uleb128 0x25
 975 0004 0E       		.uleb128 0xe
 976 0005 13       		.uleb128 0x13
 977 0006 0B       		.uleb128 0xb
 978 0007 03       		.uleb128 0x3
 979 0008 0E       		.uleb128 0xe
 980 0009 1B       		.uleb128 0x1b
 981 000a 0E       		.uleb128 0xe
 982 000b 55       		.uleb128 0x55
 983 000c 17       		.uleb128 0x17
 984 000d 11       		.uleb128 0x11
 985 000e 01       		.uleb128 0x1
 986 000f 10       		.uleb128 0x10
 987 0010 17       		.uleb128 0x17
 988 0011 00       		.byte	0
 989 0012 00       		.byte	0
 990 0013 02       		.uleb128 0x2
 991 0014 24       		.uleb128 0x24
 992 0015 00       		.byte	0
 993 0016 0B       		.uleb128 0xb
 994 0017 0B       		.uleb128 0xb
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 27


 995 0018 3E       		.uleb128 0x3e
 996 0019 0B       		.uleb128 0xb
 997 001a 03       		.uleb128 0x3
 998 001b 0E       		.uleb128 0xe
 999 001c 00       		.byte	0
 1000 001d 00       		.byte	0
 1001 001e 03       		.uleb128 0x3
 1002 001f 24       		.uleb128 0x24
 1003 0020 00       		.byte	0
 1004 0021 0B       		.uleb128 0xb
 1005 0022 0B       		.uleb128 0xb
 1006 0023 3E       		.uleb128 0x3e
 1007 0024 0B       		.uleb128 0xb
 1008 0025 03       		.uleb128 0x3
 1009 0026 08       		.uleb128 0x8
 1010 0027 00       		.byte	0
 1011 0028 00       		.byte	0
 1012 0029 04       		.uleb128 0x4
 1013 002a 16       		.uleb128 0x16
 1014 002b 00       		.byte	0
 1015 002c 03       		.uleb128 0x3
 1016 002d 0E       		.uleb128 0xe
 1017 002e 3A       		.uleb128 0x3a
 1018 002f 0B       		.uleb128 0xb
 1019 0030 3B       		.uleb128 0x3b
 1020 0031 05       		.uleb128 0x5
 1021 0032 49       		.uleb128 0x49
 1022 0033 13       		.uleb128 0x13
 1023 0034 00       		.byte	0
 1024 0035 00       		.byte	0
 1025 0036 05       		.uleb128 0x5
 1026 0037 35       		.uleb128 0x35
 1027 0038 00       		.byte	0
 1028 0039 49       		.uleb128 0x49
 1029 003a 13       		.uleb128 0x13
 1030 003b 00       		.byte	0
 1031 003c 00       		.byte	0
 1032 003d 06       		.uleb128 0x6
 1033 003e 2E       		.uleb128 0x2e
 1034 003f 01       		.byte	0x1
 1035 0040 3F       		.uleb128 0x3f
 1036 0041 19       		.uleb128 0x19
 1037 0042 03       		.uleb128 0x3
 1038 0043 0E       		.uleb128 0xe
 1039 0044 3A       		.uleb128 0x3a
 1040 0045 0B       		.uleb128 0xb
 1041 0046 3B       		.uleb128 0x3b
 1042 0047 0B       		.uleb128 0xb
 1043 0048 27       		.uleb128 0x27
 1044 0049 19       		.uleb128 0x19
 1045 004a 49       		.uleb128 0x49
 1046 004b 13       		.uleb128 0x13
 1047 004c 11       		.uleb128 0x11
 1048 004d 01       		.uleb128 0x1
 1049 004e 12       		.uleb128 0x12
 1050 004f 06       		.uleb128 0x6
 1051 0050 40       		.uleb128 0x40
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 28


 1052 0051 18       		.uleb128 0x18
 1053 0052 9742     		.uleb128 0x2117
 1054 0054 19       		.uleb128 0x19
 1055 0055 01       		.uleb128 0x1
 1056 0056 13       		.uleb128 0x13
 1057 0057 00       		.byte	0
 1058 0058 00       		.byte	0
 1059 0059 07       		.uleb128 0x7
 1060 005a 34       		.uleb128 0x34
 1061 005b 00       		.byte	0
 1062 005c 03       		.uleb128 0x3
 1063 005d 0E       		.uleb128 0xe
 1064 005e 3A       		.uleb128 0x3a
 1065 005f 0B       		.uleb128 0xb
 1066 0060 3B       		.uleb128 0x3b
 1067 0061 0B       		.uleb128 0xb
 1068 0062 49       		.uleb128 0x49
 1069 0063 13       		.uleb128 0x13
 1070 0064 02       		.uleb128 0x2
 1071 0065 18       		.uleb128 0x18
 1072 0066 00       		.byte	0
 1073 0067 00       		.byte	0
 1074 0068 08       		.uleb128 0x8
 1075 0069 2E       		.uleb128 0x2e
 1076 006a 00       		.byte	0
 1077 006b 3F       		.uleb128 0x3f
 1078 006c 19       		.uleb128 0x19
 1079 006d 03       		.uleb128 0x3
 1080 006e 0E       		.uleb128 0xe
 1081 006f 3A       		.uleb128 0x3a
 1082 0070 0B       		.uleb128 0xb
 1083 0071 3B       		.uleb128 0x3b
 1084 0072 0B       		.uleb128 0xb
 1085 0073 27       		.uleb128 0x27
 1086 0074 19       		.uleb128 0x19
 1087 0075 11       		.uleb128 0x11
 1088 0076 01       		.uleb128 0x1
 1089 0077 12       		.uleb128 0x12
 1090 0078 06       		.uleb128 0x6
 1091 0079 40       		.uleb128 0x40
 1092 007a 18       		.uleb128 0x18
 1093 007b 9642     		.uleb128 0x2116
 1094 007d 19       		.uleb128 0x19
 1095 007e 00       		.byte	0
 1096 007f 00       		.byte	0
 1097 0080 09       		.uleb128 0x9
 1098 0081 2E       		.uleb128 0x2e
 1099 0082 01       		.byte	0x1
 1100 0083 3F       		.uleb128 0x3f
 1101 0084 19       		.uleb128 0x19
 1102 0085 03       		.uleb128 0x3
 1103 0086 0E       		.uleb128 0xe
 1104 0087 3A       		.uleb128 0x3a
 1105 0088 0B       		.uleb128 0xb
 1106 0089 3B       		.uleb128 0x3b
 1107 008a 05       		.uleb128 0x5
 1108 008b 27       		.uleb128 0x27
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 29


 1109 008c 19       		.uleb128 0x19
 1110 008d 11       		.uleb128 0x11
 1111 008e 01       		.uleb128 0x1
 1112 008f 12       		.uleb128 0x12
 1113 0090 06       		.uleb128 0x6
 1114 0091 40       		.uleb128 0x40
 1115 0092 18       		.uleb128 0x18
 1116 0093 9742     		.uleb128 0x2117
 1117 0095 19       		.uleb128 0x19
 1118 0096 01       		.uleb128 0x1
 1119 0097 13       		.uleb128 0x13
 1120 0098 00       		.byte	0
 1121 0099 00       		.byte	0
 1122 009a 0A       		.uleb128 0xa
 1123 009b 05       		.uleb128 0x5
 1124 009c 00       		.byte	0
 1125 009d 03       		.uleb128 0x3
 1126 009e 0E       		.uleb128 0xe
 1127 009f 3A       		.uleb128 0x3a
 1128 00a0 0B       		.uleb128 0xb
 1129 00a1 3B       		.uleb128 0x3b
 1130 00a2 05       		.uleb128 0x5
 1131 00a3 49       		.uleb128 0x49
 1132 00a4 13       		.uleb128 0x13
 1133 00a5 02       		.uleb128 0x2
 1134 00a6 18       		.uleb128 0x18
 1135 00a7 00       		.byte	0
 1136 00a8 00       		.byte	0
 1137 00a9 0B       		.uleb128 0xb
 1138 00aa 34       		.uleb128 0x34
 1139 00ab 00       		.byte	0
 1140 00ac 03       		.uleb128 0x3
 1141 00ad 0E       		.uleb128 0xe
 1142 00ae 3A       		.uleb128 0x3a
 1143 00af 0B       		.uleb128 0xb
 1144 00b0 3B       		.uleb128 0x3b
 1145 00b1 05       		.uleb128 0x5
 1146 00b2 49       		.uleb128 0x49
 1147 00b3 13       		.uleb128 0x13
 1148 00b4 02       		.uleb128 0x2
 1149 00b5 18       		.uleb128 0x18
 1150 00b6 00       		.byte	0
 1151 00b7 00       		.byte	0
 1152 00b8 0C       		.uleb128 0xc
 1153 00b9 2E       		.uleb128 0x2e
 1154 00ba 01       		.byte	0x1
 1155 00bb 3F       		.uleb128 0x3f
 1156 00bc 19       		.uleb128 0x19
 1157 00bd 03       		.uleb128 0x3
 1158 00be 0E       		.uleb128 0xe
 1159 00bf 3A       		.uleb128 0x3a
 1160 00c0 0B       		.uleb128 0xb
 1161 00c1 3B       		.uleb128 0x3b
 1162 00c2 05       		.uleb128 0x5
 1163 00c3 27       		.uleb128 0x27
 1164 00c4 19       		.uleb128 0x19
 1165 00c5 11       		.uleb128 0x11
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 30


 1166 00c6 01       		.uleb128 0x1
 1167 00c7 12       		.uleb128 0x12
 1168 00c8 06       		.uleb128 0x6
 1169 00c9 40       		.uleb128 0x40
 1170 00ca 18       		.uleb128 0x18
 1171 00cb 9642     		.uleb128 0x2116
 1172 00cd 19       		.uleb128 0x19
 1173 00ce 01       		.uleb128 0x1
 1174 00cf 13       		.uleb128 0x13
 1175 00d0 00       		.byte	0
 1176 00d1 00       		.byte	0
 1177 00d2 0D       		.uleb128 0xd
 1178 00d3 34       		.uleb128 0x34
 1179 00d4 00       		.byte	0
 1180 00d5 03       		.uleb128 0x3
 1181 00d6 08       		.uleb128 0x8
 1182 00d7 3A       		.uleb128 0x3a
 1183 00d8 0B       		.uleb128 0xb
 1184 00d9 3B       		.uleb128 0x3b
 1185 00da 05       		.uleb128 0x5
 1186 00db 49       		.uleb128 0x49
 1187 00dc 13       		.uleb128 0x13
 1188 00dd 02       		.uleb128 0x2
 1189 00de 18       		.uleb128 0x18
 1190 00df 00       		.byte	0
 1191 00e0 00       		.byte	0
 1192 00e1 0E       		.uleb128 0xe
 1193 00e2 0F       		.uleb128 0xf
 1194 00e3 00       		.byte	0
 1195 00e4 0B       		.uleb128 0xb
 1196 00e5 0B       		.uleb128 0xb
 1197 00e6 49       		.uleb128 0x49
 1198 00e7 13       		.uleb128 0x13
 1199 00e8 00       		.byte	0
 1200 00e9 00       		.byte	0
 1201 00ea 0F       		.uleb128 0xf
 1202 00eb 26       		.uleb128 0x26
 1203 00ec 00       		.byte	0
 1204 00ed 49       		.uleb128 0x49
 1205 00ee 13       		.uleb128 0x13
 1206 00ef 00       		.byte	0
 1207 00f0 00       		.byte	0
 1208 00f1 10       		.uleb128 0x10
 1209 00f2 2E       		.uleb128 0x2e
 1210 00f3 01       		.byte	0x1
 1211 00f4 3F       		.uleb128 0x3f
 1212 00f5 19       		.uleb128 0x19
 1213 00f6 03       		.uleb128 0x3
 1214 00f7 0E       		.uleb128 0xe
 1215 00f8 3A       		.uleb128 0x3a
 1216 00f9 0B       		.uleb128 0xb
 1217 00fa 3B       		.uleb128 0x3b
 1218 00fb 05       		.uleb128 0x5
 1219 00fc 27       		.uleb128 0x27
 1220 00fd 19       		.uleb128 0x19
 1221 00fe 49       		.uleb128 0x49
 1222 00ff 13       		.uleb128 0x13
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 31


 1223 0100 11       		.uleb128 0x11
 1224 0101 01       		.uleb128 0x1
 1225 0102 12       		.uleb128 0x12
 1226 0103 06       		.uleb128 0x6
 1227 0104 40       		.uleb128 0x40
 1228 0105 18       		.uleb128 0x18
 1229 0106 9742     		.uleb128 0x2117
 1230 0108 19       		.uleb128 0x19
 1231 0109 01       		.uleb128 0x1
 1232 010a 13       		.uleb128 0x13
 1233 010b 00       		.byte	0
 1234 010c 00       		.byte	0
 1235 010d 11       		.uleb128 0x11
 1236 010e 2E       		.uleb128 0x2e
 1237 010f 00       		.byte	0
 1238 0110 3F       		.uleb128 0x3f
 1239 0111 19       		.uleb128 0x19
 1240 0112 03       		.uleb128 0x3
 1241 0113 0E       		.uleb128 0xe
 1242 0114 3A       		.uleb128 0x3a
 1243 0115 0B       		.uleb128 0xb
 1244 0116 3B       		.uleb128 0x3b
 1245 0117 05       		.uleb128 0x5
 1246 0118 27       		.uleb128 0x27
 1247 0119 19       		.uleb128 0x19
 1248 011a 11       		.uleb128 0x11
 1249 011b 01       		.uleb128 0x1
 1250 011c 12       		.uleb128 0x12
 1251 011d 06       		.uleb128 0x6
 1252 011e 40       		.uleb128 0x40
 1253 011f 18       		.uleb128 0x18
 1254 0120 9642     		.uleb128 0x2116
 1255 0122 19       		.uleb128 0x19
 1256 0123 00       		.byte	0
 1257 0124 00       		.byte	0
 1258 0125 12       		.uleb128 0x12
 1259 0126 34       		.uleb128 0x34
 1260 0127 00       		.byte	0
 1261 0128 03       		.uleb128 0x3
 1262 0129 0E       		.uleb128 0xe
 1263 012a 3A       		.uleb128 0x3a
 1264 012b 0B       		.uleb128 0xb
 1265 012c 3B       		.uleb128 0x3b
 1266 012d 0B       		.uleb128 0xb
 1267 012e 49       		.uleb128 0x49
 1268 012f 13       		.uleb128 0x13
 1269 0130 3F       		.uleb128 0x3f
 1270 0131 19       		.uleb128 0x19
 1271 0132 02       		.uleb128 0x2
 1272 0133 18       		.uleb128 0x18
 1273 0134 00       		.byte	0
 1274 0135 00       		.byte	0
 1275 0136 13       		.uleb128 0x13
 1276 0137 01       		.uleb128 0x1
 1277 0138 01       		.byte	0x1
 1278 0139 49       		.uleb128 0x49
 1279 013a 13       		.uleb128 0x13
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 32


 1280 013b 01       		.uleb128 0x1
 1281 013c 13       		.uleb128 0x13
 1282 013d 00       		.byte	0
 1283 013e 00       		.byte	0
 1284 013f 14       		.uleb128 0x14
 1285 0140 21       		.uleb128 0x21
 1286 0141 00       		.byte	0
 1287 0142 49       		.uleb128 0x49
 1288 0143 13       		.uleb128 0x13
 1289 0144 2F       		.uleb128 0x2f
 1290 0145 05       		.uleb128 0x5
 1291 0146 00       		.byte	0
 1292 0147 00       		.byte	0
 1293 0148 00       		.byte	0
 1294              		.section	.debug_aranges,"",%progbits
 1295 0000 5C000000 		.4byte	0x5c
 1296 0004 0200     		.2byte	0x2
 1297 0006 00000000 		.4byte	.Ldebug_info0
 1298 000a 04       		.byte	0x4
 1299 000b 00       		.byte	0
 1300 000c 0000     		.2byte	0
 1301 000e 0000     		.2byte	0
 1302 0010 00000000 		.4byte	.LFB2
 1303 0014 58000000 		.4byte	.LFE2-.LFB2
 1304 0018 00000000 		.4byte	.LFB3
 1305 001c 48000000 		.4byte	.LFE3-.LFB3
 1306 0020 00000000 		.4byte	.LFB4
 1307 0024 60000000 		.4byte	.LFE4-.LFB4
 1308 0028 00000000 		.4byte	.LFB5
 1309 002c 9C000000 		.4byte	.LFE5-.LFB5
 1310 0030 00000000 		.4byte	.LFB6
 1311 0034 32000000 		.4byte	.LFE6-.LFB6
 1312 0038 00000000 		.4byte	.LFB7
 1313 003c 48000000 		.4byte	.LFE7-.LFB7
 1314 0040 00000000 		.4byte	.LFB8
 1315 0044 64000000 		.4byte	.LFE8-.LFB8
 1316 0048 00000000 		.4byte	.LFB9
 1317 004c 20000000 		.4byte	.LFE9-.LFB9
 1318 0050 00000000 		.4byte	.LFB10
 1319 0054 20000000 		.4byte	.LFE10-.LFB10
 1320 0058 00000000 		.4byte	0
 1321 005c 00000000 		.4byte	0
 1322              		.section	.debug_ranges,"",%progbits
 1323              	.Ldebug_ranges0:
 1324 0000 00000000 		.4byte	.LFB2
 1325 0004 58000000 		.4byte	.LFE2
 1326 0008 00000000 		.4byte	.LFB3
 1327 000c 48000000 		.4byte	.LFE3
 1328 0010 00000000 		.4byte	.LFB4
 1329 0014 60000000 		.4byte	.LFE4
 1330 0018 00000000 		.4byte	.LFB5
 1331 001c 9C000000 		.4byte	.LFE5
 1332 0020 00000000 		.4byte	.LFB6
 1333 0024 32000000 		.4byte	.LFE6
 1334 0028 00000000 		.4byte	.LFB7
 1335 002c 48000000 		.4byte	.LFE7
 1336 0030 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 33


 1337 0034 64000000 		.4byte	.LFE8
 1338 0038 00000000 		.4byte	.LFB9
 1339 003c 20000000 		.4byte	.LFE9
 1340 0040 00000000 		.4byte	.LFB10
 1341 0044 20000000 		.4byte	.LFE10
 1342 0048 00000000 		.4byte	0
 1343 004c 00000000 		.4byte	0
 1344              		.section	.debug_line,"",%progbits
 1345              	.Ldebug_line0:
 1346 0000 45010000 		.section	.debug_str,"MS",%progbits,1
 1346      02004A00 
 1346      00000201 
 1346      FB0E0D00 
 1346      01010101 
 1347              	.LASF14:
 1348 0000 72656733 		.ascii	"reg32\000"
 1348      3200
 1349              	.LASF26:
 1350 0006 636F756E 		.ascii	"count\000"
 1350      7400
 1351              	.LASF24:
 1352 000c 74784461 		.ascii	"txData\000"
 1352      746100
 1353              	.LASF3:
 1354 0013 73686F72 		.ascii	"short unsigned int\000"
 1354      7420756E 
 1354      7369676E 
 1354      65642069 
 1354      6E7400
 1355              	.LASF8:
 1356 0026 756E7369 		.ascii	"unsigned int\000"
 1356      676E6564 
 1356      20696E74 
 1356      00
 1357              	.LASF30:
 1358 0033 55415254 		.ascii	"UART_SpiUartDisableIntRx\000"
 1358      5F537069 
 1358      55617274 
 1358      44697361 
 1358      626C6549 
 1359              	.LASF21:
 1360 004c 6C6F6348 		.ascii	"locHead\000"
 1360      65616400 
 1361              	.LASF11:
 1362 0054 666C6F61 		.ascii	"float\000"
 1362      7400
 1363              	.LASF32:
 1364 005a 55415254 		.ascii	"UART_SpiUartDisableIntTx\000"
 1364      5F537069 
 1364      55617274 
 1364      44697361 
 1364      626C6549 
 1365              	.LASF20:
 1366 0073 73697A65 		.ascii	"size\000"
 1366      00
 1367              	.LASF5:
 1368 0078 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 34


 1368      20756E73 
 1368      69676E65 
 1368      6420696E 
 1368      7400
 1369              	.LASF9:
 1370 008a 75696E74 		.ascii	"uint8\000"
 1370      3800
 1371              	.LASF35:
 1372 0090 55415254 		.ascii	"UART_rxBufferTail\000"
 1372      5F727842 
 1372      75666665 
 1372      72546169 
 1372      6C00
 1373              	.LASF16:
 1374 00a2 72784461 		.ascii	"rxData\000"
 1374      746100
 1375              	.LASF25:
 1376 00a9 77724275 		.ascii	"wrBuf\000"
 1376      6600
 1377              	.LASF1:
 1378 00af 756E7369 		.ascii	"unsigned char\000"
 1378      676E6564 
 1378      20636861 
 1378      7200
 1379              	.LASF39:
 1380 00bd 55415254 		.ascii	"UART_rxBufferInternal\000"
 1380      5F727842 
 1380      75666665 
 1380      72496E74 
 1380      65726E61 
 1381              	.LASF12:
 1382 00d3 646F7562 		.ascii	"double\000"
 1382      6C6500
 1383              	.LASF38:
 1384 00da 55415254 		.ascii	"UART_txBufferTail\000"
 1384      5F747842 
 1384      75666665 
 1384      72546169 
 1384      6C00
 1385              	.LASF41:
 1386 00ec 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1386      4320342E 
 1386      392E3320 
 1386      32303135 
 1386      30333033 
 1387 011f 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1387      20726576 
 1387      6973696F 
 1387      6E203232 
 1387      31323230 
 1388 0152 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1388      66756E63 
 1388      74696F6E 
 1388      2D736563 
 1388      74696F6E 
 1389              	.LASF10:
 1390 017a 75696E74 		.ascii	"uint32\000"
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 35


 1390      333200
 1391              	.LASF29:
 1392 0181 55415254 		.ascii	"UART_SpiUartClearTxBuffer\000"
 1392      5F537069 
 1392      55617274 
 1392      436C6561 
 1392      72547842 
 1393              	.LASF23:
 1394 019b 55415254 		.ascii	"UART_SpiUartPutArray\000"
 1394      5F537069 
 1394      55617274 
 1394      50757441 
 1394      72726179 
 1395              	.LASF33:
 1396 01b0 696E7453 		.ascii	"intSourceMask\000"
 1396      6F757263 
 1396      654D6173 
 1396      6B00
 1397              	.LASF31:
 1398 01be 696E7453 		.ascii	"intSource\000"
 1398      6F757263 
 1398      6500
 1399              	.LASF7:
 1400 01c8 6C6F6E67 		.ascii	"long long unsigned int\000"
 1400      206C6F6E 
 1400      6720756E 
 1400      7369676E 
 1400      65642069 
 1401              	.LASF36:
 1402 01df 55415254 		.ascii	"UART_rxBufferOverflow\000"
 1402      5F727842 
 1402      75666665 
 1402      724F7665 
 1402      72666C6F 
 1403              	.LASF17:
 1404 01f5 6C6F6354 		.ascii	"locTail\000"
 1404      61696C00 
 1405              	.LASF15:
 1406 01fd 73697A65 		.ascii	"sizetype\000"
 1406      74797065 
 1406      00
 1407              	.LASF6:
 1408 0206 6C6F6E67 		.ascii	"long long int\000"
 1408      206C6F6E 
 1408      6720696E 
 1408      7400
 1409              	.LASF22:
 1410 0214 55415254 		.ascii	"UART_SpiUartWriteTxData\000"
 1410      5F537069 
 1410      55617274 
 1410      57726974 
 1410      65547844 
 1411              	.LASF27:
 1412 022c 55415254 		.ascii	"UART_SpiUartGetTxBufferSize\000"
 1412      5F537069 
 1412      55617274 
 1412      47657454 
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 36


 1412      78427566 
 1413              	.LASF37:
 1414 0248 55415254 		.ascii	"UART_txBufferHead\000"
 1414      5F747842 
 1414      75666665 
 1414      72486561 
 1414      6400
 1415              	.LASF2:
 1416 025a 73686F72 		.ascii	"short int\000"
 1416      7420696E 
 1416      7400
 1417              	.LASF43:
 1418 0264 433A5C55 		.ascii	"C:\\Users\\Andrew Joseph\\Desktop\\Senior Design\\t"
 1418      73657273 
 1418      5C416E64 
 1418      72657720 
 1418      4A6F7365 
 1419 0292 72756E6B 		.ascii	"runk\\src\\PSoC_Core\\fNIR PSoC Central\\fNIR PSoC "
 1419      5C737263 
 1419      5C50536F 
 1419      435F436F 
 1419      72655C66 
 1420 02c1 43656E74 		.ascii	"Central.cydsn\000"
 1420      72616C2E 
 1420      63796473 
 1420      6E00
 1421              	.LASF42:
 1422 02cf 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_SPI_UART.c\000"
 1422      72617465 
 1422      645F536F 
 1422      75726365 
 1422      5C50536F 
 1423              	.LASF18:
 1424 02f6 55415254 		.ascii	"UART_SpiUartReadRxData\000"
 1424      5F537069 
 1424      55617274 
 1424      52656164 
 1424      52784461 
 1425              	.LASF4:
 1426 030d 6C6F6E67 		.ascii	"long int\000"
 1426      20696E74 
 1426      00
 1427              	.LASF13:
 1428 0316 63686172 		.ascii	"char\000"
 1428      00
 1429              	.LASF28:
 1430 031b 55415254 		.ascii	"UART_SpiUartClearRxBuffer\000"
 1430      5F537069 
 1430      55617274 
 1430      436C6561 
 1430      72527842 
 1431              	.LASF40:
 1432 0335 55415254 		.ascii	"UART_txBufferInternal\000"
 1432      5F747842 
 1432      75666665 
 1432      72496E74 
 1432      65726E61 
ARM GAS  C:\Users\ANDREW~1\AppData\Local\Temp\cczq5R8R.s 			page 37


 1433              	.LASF0:
 1434 034b 7369676E 		.ascii	"signed char\000"
 1434      65642063 
 1434      68617200 
 1435              	.LASF19:
 1436 0357 55415254 		.ascii	"UART_SpiUartGetRxBufferSize\000"
 1436      5F537069 
 1436      55617274 
 1436      47657452 
 1436      78427566 
 1437              	.LASF34:
 1438 0373 55415254 		.ascii	"UART_rxBufferHead\000"
 1438      5F727842 
 1438      75666665 
 1438      72486561 
 1438      6400
 1439              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
